<?xml version="1.0"?>
<project name="MODxCoreLocal" basedir=".">
    <!-- Override properties in the build.properties file -->
    <property file="build.properties" />
    <property file="build.local.properties" />

    <!-- Set some common project properties -->
    <property name="project.name" value="modx" />
    <property name="project.basedir" value=".." />
    <property name="project.core.dir" value="${project.basedir}/core" />
    <property name="project.assets.dir" value="${project.basedir}/assets" />
    <property name="project.connectors.dir" value="${project.basedir}/connectors" />
    <property name="project.manager.dir" value="${project.basedir}/manager" />
    <property name="project.modext.dir" value="${project.manager.dir}/assets/modext" />

    <!-- Set the project version -->
    <property name="modx.core.version" value="2.0.0" />
    <property name="modx.core.release" value="alpha" />

    <!-- Set some common build properties -->
    <property name="build.dir" value="${basedir}" />
    <property name="build.image.basedir" value="${build.dir}/image" />
    <property name="build.image.dir" value="${build.dir}/image/modx-${modx.core.version}-${modx.core.release}" />
    <property name="build.image.modext.dir" value="${build.image.basedir}/modext" />
    <property name="build.distrib.dir" value="${build.dir}/distrib" />
    <property name="build.apidocs.dir" value="${project.basedir}/docs" />

    <!-- Set a path representing all the root path elements for the build source -->
    <path id="project.srcpath">
        <pathelement location="${project.core.dir}" />
        <pathelement location="${project.assets.dir}" />
        <pathelement location="${project.connectors.dir}" />
        <pathelement location="${project.manager.dir}" />
        <pathelement location="${project.basedir}/index.php" />
        <pathelement location="${project.basedir}/ht.access" />
    </path>

    <!-- Set the project classpath and define the svn task -->
    <path id="project.classpath">
        <fileset dir="${basedir}/lib">
            <include name="**/*.jar" />
        </fileset>
    </path>
    <taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" classpathref="project.classpath" />
    <taskdef name="yuicompress" classname="com.yahoo.platform.yui.compressor.YUICompressTask" classpathref="project.classpath" />

    <!-- ================================= 
          target: complete              
         ================================= -->
    <target name="complete" description="--> Complete Local Build">
        <antcall target="modext-minify"></antcall>
        <antcall target="modext-concat-min"></antcall>
        <antcall target="modext-concat"></antcall>
        <antcall target="copy-prepared-js"></antcall>
        <antcall target="generate-core-transport"></antcall>
        <!--<antcall target="generate-phpdocs"></antcall>-->
    </target>

    <!-- Various cleanup targets -->
    <target name="cleanup-build-image" description="empty the build image directory">
        <delete dir="${build.image.dir}" />
    </target>
    <target name="cleanup-build-modext-image" description="empty the MODExt build image directory">
        <delete dir="${build.image.modext.dir}" />
    </target>
    <target name="cleanup-build-apidocs" description="empty the build apidocs directory">
        <delete dir="${build.apidocs.dir}" />
    </target>

    <!-- Minify the MODExt JavaScript libraries (using YUIAnt task) -->
    <target name="modext-minify" depends="cleanup-build-modext-image" description="Create minimized MODExt scripts from the working copy">
        <echo>Creating minimized js scripts from your working copy</echo>

        <yuicompress warn="false" munge="no" preserveallsemicolons="true" outputsuffix="-min" 
            outputfolder="${build.image.modext.dir}/build" >
            <fileset dir="${project.manager.dir}/assets/modext"
                includes="**/*.js" 
                excludes="build/**,util/filetree/**,modext.js,modext-debug.js"
            />
        </yuicompress>
    </target>

    <!-- Concat the minified MODExt JavaScript libraries -->
    <target name="modext-concat-min" description="Create modext.js">
        <echo>Creating modext.js in ${build.image.modext.dir}</echo>
        
        <concat destfile="${build.image.modext.dir}/modext.js">
            <header filtering="no" trimleading="yes">
/**
MODExt Revolution 1.0
Copyright (c) 2007-2008, Shaun McCormick
All rights reserved
MODx-specific JS extension for ExtJS 2.2

-------------

The MODExt JS extension is distributed under the terms of the GNU GPLv3 license.
It extends ExtJS, distributed under the Open Source GPL 3.0 license.

http://www.gnu.org/licenses/gpl.html

-------------

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
*/
            </header>
            <fileset dir="${build.image.modext.dir}/build/core"
                includes="**/*.js"
                  excludes="modx-min.js,modx.layout-min.js" />
            <fileset dir="${build.image.modext.dir}/build/util"
                includes="**/*.js"
                  excludes="filetree/**" />
                  <!--
            <fileset dir="${build.image.modext.dir}/build/widgets/core"
                includes="**/*.js"
                excludes="modx.msg-min.js,modx.grid-min.js" />
                -->
        </concat>
    </target>
    
    <!-- Concat the non-minified MODExt JavaScript libraries -->
    <target name="modext-concat" description="Create modext-debug.js">
        <echo>Creating modext-debug.js in ${build.image.modext.dir}</echo>
        
        <concat destfile="${build.image.modext.dir}/modext-debug.js">
            <header filtering="no" trimleading="yes">
/**
MODExt Revolution 1.0
Copyright (c) 2007-2008, Shaun McCormick
All rights reserved
MODx-specific JS extension for ExtJS 2.2

-------------

The MODExt JS extension is distributed under the terms of the GNU GPLv3 license.
It extends ExtJS, distributed under the Open Source GPL 3.0 license.

http://www.gnu.org/licenses/gpl.html

-------------

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
*/
            </header>
            <fileset dir="${project.modext.dir}/core"
                includes="**/*.js"
                  excludes="widgets/**,modx.js,modx.layout.js,modx.onready.js" />
                  
            <fileset dir="${project.modext.dir}/util"
                includes="**/*.js"
                  excludes="filetree/**" />
                  
        </concat>
    </target>

    <!-- Copy the minified and concatenated MODExt files to the working copy -->
    <target name="copy-prepared-js" description="copy the minified and concatenated js files to the working copy">
        <delete file="${project.modext.dir}/modext.js" />
        <delete file="${project.modext.dir}/modext-debug.js" />
        <delete dir="${project.modext.dir}/build" />
        <copy todir="${project.modext.dir}">
            <fileset dir="${build.image.modext.dir}" />
        </copy>
    </target>

    <!-- Run the core data generation script -->
    <target name="generate-core-data"
            description="generate core data for MODx from a reference database"
    >
        <exec dir="${basedir}" executable="${php.command}">
            <arg line="${basedir}/transport.data.php" />
        </exec>
    </target>

    <!-- Run the core package generation script in your local working copy -->
    <target name="generate-core-transport" description="generate the core transport package in your working copy">
        <delete file="${project.core.dir}/packages/core.transport.zip" />
        <delete dir="${project.core.dir}/packages/core" />
        <exec dir="${basedir}" executable="${php.command}">
            <arg line="${basedir}/transport.core.php" />
        </exec>
    </target>

    <!-- Run the phpdoc generation script -->
    <target name="generate-phpdocs"
            depends="cleanup-build-apidocs"
            description="generate the phpdoc documentation"
    >
        <exec dir="${project.basedir}" executable="${phpdoc.command}">
            <arg line="-c ${basedir}/phpdoc.ini" />
        </exec>
    </target>
</project>