
This file shows the changes in recent releases of MODx. The most current release is usually the 
development release, and is only shown to give an idea of what's currently in the pipeline.

MODx Revolution 2.0.0-rc-1 ($LastChangedRevision$, $LastChangedDate$)
====================================
- Prepared for rc1 release
- Fixed CSS compression copying in build.xml 
- Fixed regClient*() functions to work again on cacheable scripts
- Move element source and include cache files outside of context cache directories since they should be cleared only when elements are updated
- Remove eval() from modScript and re-enable remote debugging of modScript instances by caching function as include in addition to source cache
- [#MODX-1759] Ensure manager log fires on top menu deletion
- [#MODX-1772] Ensure array of IDs is passed to OnBeforeEmptyTrash and OnEmptyTrash plugin events
- Added a welcome screen to show on first login to manager
- [#MODX-1738] Fixed issue with default value on radio TVs
- [#MODX-1741] Fixing inconsistent widths for radio options by making them list vertically rather than horizontally
- [#MODX-1769] Lexicon grid search now searches name and value
- [#MODX-877] Updated confusing text on TV access permissions tab
- [#MODX-1766] Fixed PHP_SAPI issue to properly work by setting a default value on setup to provide a default http_host value to  properly populate the site_url
- Fixed bug in setup that didn't catch processors_path in prior configs
- [#MODX-1759] Fixed bugs with manager log not storing correct PK values, or displaying missing keys in grid
- [#MODX-1766] Fixed config.inc.tpl to work with non-httpd SAPI's
- Added title/info for the Reports->System Info->Database page. This is return fixed the CSS styling issue as well.
- Fixed CSS Styling on Recent Documents. 5px padding was removed.
- Fixed bugs with modMail class and default attributes that prevented attributes from persisting after a reset()
- Removing deprecated RTE handler code
- [#MODX-1762] Increased file uploader window size for translations
- Dont render unnecessary tabs in Resource TV panel if no TVs assigned to Template for that Resource
- Sort Template Variables on the Template editing page by name
- Ensure Element Properties that have HTML in them show markup instead of rendering the html in editing mode in mgr ui 
- [#MODX-1669] Redid File Uploader in Directory tree to be more cross-browser compatible 
- Cleaned up and enhanced login CSS
- Standardizing and adding class constants to modRest* classes
- Updated copyright data in lexicon entries
- Fixes to build.xml, css compression command
- Updated copyright dates
- [#MODX-1750] Lots of procedural and reference fixes to Lexicon grid UI
- Cleaned up presentation of modAction records in mgr
- Added a fix to tree refreshParentNode; enhanced modUserGroup::getUsersIn()
- Added saving mask to Element Property grid to fire when saving the property set
- Removed deprecated file reference in login template
- Added System Settings to toggle news/security feeds in welcome panel
- Added System Setting to toggle on automatic checking of package updates in Package Management
- [#MODX-1751] Fixed erroneous reference in friendly alias setting description
- [#MODX-1752] Fixed bug where topmenu items without children didnt show even if they had an action
- Some css tweaks to login page
- Updated to xPDO 2.0.0 r419 to fix xPDOVehicle bug
- Fixed bug with Download Output button in MODx.Console
- Ensure forgot login activation email is HTML 
- Added Forgot Login link and form to manager, sends an activation email to specified email if user forgot login/password
- Fixed SQL sorting algorithm for package versions, added helper methods for comparing package versions
- Added $resource to properties passed to OnDocFormDelete in resource/delete processor
- Updated to xPDO 2.0.0 r417 ([#XPDO-40] Fixed getCount to work when passing a criteria with a class alias set)
- Enhanced striptags output filter to take a parameter of allowed tags
- Make sure $paths and $options are passed to OnCacheUpdate
- Added compression/concat references to login and browser tpls
- Fixed build.local.xml and build.xml scripts
- Added compress_css system setting for compressed CSS for releases, moved over modx-theme.css to templates css/ dir. Don't use compress_css without first running _build/build.local.xml Ant task.
- Cleaned up leftover PHP4 function definitions, unescaped SQL code, added proper accessor methods for private vars, other old code 
- Fixed bug with modLexiconLanguage::clearCache
- [#MODX-1738] Fixed issue with FC TV rules not working as expected on Resource Update
- Fixed bug where plugin event properties were getting merged if more than one plugin was associated with the event
- Added loading mask to editing panels to prevent accidental editing before data is loaded
- Added sanity check for OnRichTextBrowserInit event processing
- Added fix for RTE loading in Resource panel, should fix most RTE saving bugs
- Added collapsibility to Document panel
- Added 'concat_js' system setting that will concat all the common JS files into one single file
- Adjusted lang.js.php to properly use ETag header to cache lang js
- Added css rule to prevent hidden iframes from being shown
- Fixed bug where Resource Groups were not editable on Create Resource
- Added sanity check for packages with missing provider
- Added "Updates Available" column to packages grid, auto-checks provider for updates
- [#MODX-1732] Added duplicate language ability to language grid
- [#MODX-1741] Fixed possible bug with radio/cb tv labels
- [#MODX-1593] Fixed bug where User could not be added with no role in User Groups tree
- [#MODX-1735] Properly URL encode link tags while still preserving = and &amp; in query string
- [#MODX-1736] Fixed bug with assigning TVs to Resource Groups
- [#MODX-1740] Added workaround for SQL code to properly hide TVs with FC rules 
- [#MODX-1738] Fixed bug with radiogroups and set TV default FC rule
- Fixed some header issues, _FILES content type handling
- [#MODX-1733] Fixed bug that was stripping tags from connector processing
- Ensured that Static Resource filename change fires dirty status
- Made sure Set to Default fires dirty status for Resource panel
- Fixed possible width stretching bug in TV panel in Resource edit view
- [#MODX-1543] Added "Rename Category" to category nodes in element subnodes in Element Tree
- [#MODX-933] Can now drag/drop Elements into Categories in the Element Tree to assign them to Categories
- [#MODX-1729] Fixed incorrect filter name to be more appropriate to function
- [#MODX-1727] Added missing Empty Cache checkbox to derivative resource panels
- [#MODX-1724] Fixed bug with output renders in TV panel not triggering panel dirty status
- [#MODX-1730] Fixed bug with $scriptProperties and login processor
- Some cleanups to MODExt flow and ID referencing
- Changed all GPC references in processors to $scriptProperties, which is loaded at entrance points to processors with GPC vars, pushing input handling to the connector
- [#MODX-1711] Fixed bug with strip output filter
- Added ellipsis output filter
- Fixed various event callings across JS implementation to properly modularize modext components
- Added events to user's groups grid to ensure dirty firing
- Added MODx.FormPanel::markDirty
- Added in CSS tweaks to accommodate Opera 10.5
- Fixed bug with users grid if access permissions tab is removed
- Fixed deprecated method definitions in modConnector classes 
- Fixed text in language settings to more accurately reflect function
- Added area filter to Settings grid
- [#MODX-1721] Disabled unnecessary paging on System Events table
- [#MODX-1726] Added sanity check to ensure TV input type is properly set
- Fixed bug with action buttons and continue stay method
- Added UI for managing website field in modUserProfile
- Added website field to modUserProfile
- Removed unnecessary and problematic editor dropdown in chunk editing screen
- Sped up drag/drop of reordering in tree by now only framing moved nodes instead of refreshing
- Added modRequest::getParameters() method for retrieving various GPC variables or arrays of variables; automatically strips MODx GET parameters as necessary
- modRequest::__construct() now creates references to all GPC variables in modRequest::$parameters
- Modified modX::makeUrl()/modContext::makeUrl() to accept query string parameters as an array or string
- Added modX::toQueryString() static method to turn associative array into a valid query string
- [#MODX-1709] Fixed issue with encoding of action button parameter
- [#MODX-1554] Prevented uploading of files to files themselves in directory tree
- [#MODX-1700] Fixed issue with text referencing setting in lexicon entry
- Ensure tags in a Static Resource content are parsed before trying to load the source path
- Fixed static/weblink update js
- Removed unnecessary and redundant table prefix check later on in setup
- Fixed css/js properties in TV tab to let RTEs auto-determine the height of their TD fields
- Fixed missing permissions reference on resource controllers
- Added OnHandleRequest to modManagerRequest::handleRequest
- Properly hides UI elements for Resource buttons/pages if user doesnt have permissions 
- Refactored modResource::cleanAlias() to allow various options, including built-in and custom transliteration capabilities
- [#MODX-717] Foreign characters (UTF8 data) needlessly removed from alias
- Hide top menu items if there are no submenus and if the topmenu is not clickable
- [#MODX-1690] Fixed text for confirmation dialog when removing an Element to include name and type of Element
- [#MODX-1707] Added mail_charset and mail_encoding system settings to control charset and encoding in emails
- [#MODX-1706] Ensure that text and qtip fields in Resource/Element trees have any tags stripped
- [#MODX-1699] Fixed bug in Quick Edit TV where it would erase the caption and replace it with the name
- [#MODX-1704] Fixed erroneous if statement in clear button hiding in error log panel
- [#MODX-1675] Added fix for windows paths on Edit File panel
- [#MODX-1681] Added checks for issue with importing lexicon in Webkit-based browsers
- Cleanups to TV input widths
- Removing core RTE; too much work, may take back up in a later version
- [#MODX-1697] Added ability to edit images and links in RTE
- Added more robust MODx.rte.Selection API
- Added missing changes to modActions needed to load lexicon entries for RTE
- [#MODX-1662] Fixed mismatch in menus widget field label
- [#MODX-1687] Fixed bugs in template package browser due to changes in modx.view.js
- Made resource panel be a fileUpload-able panel for plugins
- [#MODX-1357] Added richtext_default system setting 
- [#MODX-1685] Added MODxEditor, a core Ext-based RTE to be the default RTE for Revolution
- [#MODX-1674] Stabilized MODx.Browser to work with core RTE
- - Added missing registry.db.modDbRegister* classes to setup
- [#MODX-1642] Logging out doesn't unlock resources: added modUser::removeLocks() and modified modUser::endSession() to call this method
- Added OnInitCulture event to core transport data.
- [#MODX-1672] Refactor collation/connection processors in setup to be more stable
- Updated xPDO to r414 for improvements in xPDOManager
- modInstall::writeConfig() uses new_file_permissions if specified or umask() settings by default
- Removed superfluous calls to xPDO/modX::setDebug() and xPDO/modX::setLogLevel() in modInstall
- modInstall::getConnection() now uses utf8_general_ci for charset/collation by default
- [#MODX-1691] Set Quick Create/Update windows to use anchor property rather than width to adjust for resizing
- Added 'cultureKey' setting to enable easier language translation in contexts/fe/components
- Fixes to styling for MODx.Browser window
- Added 'relativeUrl' parameter to MODx.Browser file data
- [#MODX-1674] Fixes and stabilization to MODx.Browser, specifically when used by RTEs
- Changing default editor from TinyMCE to blank value
- Fixed bug in setup where inplace setting was being forced to 1
- Cleaned up most processors, fixed wrong permission references, standardized code
- Fixed welcome panel to only show panels with permission to see
- Fixed error log view page to restrict viewing and clearing by permission
- Added descriptive information to Roles grid
- Lots of permissions fixes, other bugfixes and sanity checks to Element processors/controllers
- Added propertyset permissions
- Cleanups to Resource controllers, processors, optimizing of security permission checks
- Fixed various bugs with search page
- Fixed bug with adding policies that prevented partial regexp matches in name
- Fixed bugs when adding new policies or permissions that showed prior added perm/policy in form
- Properly secured and refactored recently edited resources grid
- [#MODX-1670] Adjusted permissions to allow restricted user to edit profile
- [#MODX-1667] Removed unnecessary opacity CSS rule in menus
- Fixed bug where page wasnt reloading on login in certain situations
- Make rightlogin div longer to support longer translations
- [#MODX-1653] Fixed issues with related objects, removal of aggregates, and other packaging bugs. Introduced xPDOTransport::UNINSTALL_OBJECT, which defaults to true. When off, it will prevent an object from being uninstalled. 
- Updated xPDO to r413
- [#MODX-761] Fixed language issue in setup, now sets it correctly and loads proper lexicon for login screen
- Ensure console window appears above other windows
- [#MODX-1663] Added MODx.msg.status, which shows a fading status message on a successful save. This also solves the issue of user feedback. 
- Removed unnecessary field from recently-edited-resource grid on welcome screen
- [#MODX-1660], [#MODX-1037] Revamped login screen to HTML/CSS, basic form processing to allow browsers to save password in their password management systems
- Revamped UI in new setup options, cleared up text, simplified presented options
- [#MODX-18] Allow editing of MODX_CONFIG_KEY in setup welcome view
- [#MODX-18] Prompt user for MODX_CORE_PATH if not found at beginning of setup
- [#MODX-760], [#MODX-1080], [#MODX-1528] Added setup option to set new_file_permissions and new_folder_permissions in welcome view
- [#MODX-760], [#MODX-1528] Removed new_file_permissions and new_folder_permissions system settings from setup
- [#MODX-760], [#MODX-1528] Updated xPDO 2.0 to revision 407: new file and folder permissions determined from umask()
- [#MODX-878] Stay buttons now action-specific, done through Ext state rather than PHP
- Redo logic order of modPackageBuilder::buildLexicon to ensure languages are packaged in before topics
- [#MODX-1647] Added width specification to force width of screen to prevent scrolling off of RTE TVs
- Cleaned up tvTitle Form Customization rule by moving code from JS to PHP
- Fixed z-index issue for windows due to IE fix
- [#MODX-732] Added z-index force to topmenu for IE, fixed rightlogin div on topbar for IE
- [#MODX-1641] Optimized and cleaned code dealing with Form Customization TV visibility and default values
- [#MODX-1658] Fixed bug where placing a menu item in a submenu would place it in top level
- [#MODX-1624] Enabled changing of text field in menu items
- [#MODX-1656], [#MODX-1654] Fixed CSS gap in install summary in setup
- [#MODX-1655] Fixed hardcoded lexicon strings in setup
- [#MODX-1621] Remove unnecessary context menu items from items in Resource Group Resources tree
- [#MODX-1627] Fixed incorrect menu in resource group tree resources when newly dragged
- [#MODX-1599] Added manager_date_format system setting for customizing date formats for the manager
- [#MODX-1651] Increasing width of setup navbar buttons to accommodate translations
- [#MODX-1649] Fixed bug where Quick Create didn't respect default_template setting
- [#MODX-1650] Fixed bug with language specification in setup to properly set cookie for Windows machines, and set initial language properly
- [#MODX-1626] Fixed bug where top menus could not have actions
- [#MODX-1494] Fixed issue where some settings dont have descriptions, and cleaned up deprecated settings
- [#MODX-1645] Fixed incorrect lexicon key for setting_site_start_err
- [#MODX-1646] Fixed issue where download buttons were staying grayed out if there was an error message
- [#MODX-1644] Added SMTP mail settings to default system settings to allow global SMTP usage for all modMail functions
- [#MODX-1606] Fixed bug in modRestCurlClient class due to encoded ampersand
- [#MODX-197] Refactored Action Buttons JS, added 'actionNew', 'actionContinue', and 'actionClose' events to MODx.FormPanel objects, ensured parent/context_key is persisted through add another resources
- Added a couple sanity checks to modRestCurlClient
- Added JS to disable install button when clicked in setup to prevent double-clicks
- controllers/resources/create: Refactored template inheritance to occur before any delegate controller is called.
- processors/resources/create: Moved OnBeforeDocFormSave event invocation until after POST vars are applied to $resource object.
- processors/resources/create: Refactored common code to be executed before any delegate processor is called.
- processors/resources/create: Refactored to respect add_children and new_document_in_root permissions.
- Added various access_denied lexicons to the resource topic.
- Added new_document_in_root permission to control access to creating Resources at the root level.
- Updated to xPDO 2.0 revision 406.
- [#MODX-1606] Added sanity checks and ID standardization to DOM nodes for Package Browser
- Fixed possible bug with ta-toggle div in resource panel
- [#MODX-1628] Fixed FC tvDefault rule by doing setting php-side
- [#MODX-1636] Added ability to assign Role to User when adding them to a User Group from the User Groups tree 
- [#MODX-1634] Fixed bug with resource/resourcegroup/getlist processor that prevented showing of resource groups in new resource panels
- [#MODX-1639] Fixed bug where resource panel JS didnt check for existence of possibly hidden access permissions grid
- Fixed modUser::removeSessionContext() to call modUser::endSession() if no contexts are left
- Fixed modUser::endSession() to destroy all SESSION data and the session cookie
- Fixed bug in Plugin -> System Events tab caused by invalid function call in getlist processor
- Fixed problems with various deprecated functions to increase compatibility with Evo and avoid performance issues:
    * modX::getDocuments() and modX::getDocument()
    * modX::getAllChildren()
    * modX::getActiveChildren()
    * modX::getDocumentChildren()
    * modX::getDocumentChildrenTVars()
    * modX::getParent()
    * modX::getPageInfo()
    * modX::getUserInfo()
- Fixed modX::__construct() declaration to indicate it properly as a public method; added phpdoc comments.
- Fixed modX::sanitize() declaration to indicate it properly as a static method.
- Updated to xPDO 2.0 revision 405
- [#MODX-1614] Fixed issue with cached pages going to unauthorized_page instead of error_page when user does not have load permission 
- [#MODX-411] Set system setting: emailsender to the admin email address during install
- [#MODX-1556] Show class and id for deleted resources or elements in Manager Action Log
- [#MODX-1552] Create New element Here shows for root elements but not those in categories
- [#MODX-1625] Fixed bugs with menu tree preventing creating child nodes of new items, restyled menu and action icons
- Added preventative to make sure packages are only downloaded once when in Package Browser
- [#MODX-1623] Fixed package installation error: attempting to preserve files fails with error message
- Updated to xPDO 2.0 revision 404
- Setup upgrades no longer preserve existing data/files on install
- Fixed issue with setup trying to write connector files regardless if files are already in place
- Updated to xPDO 2.0 revision 403
- Fixed bug where plugin properties were not being injected into the plugin event call
- [#MODX-1617] Fixed bug with tvDefaultValue Form Customization Rule
- [#MODX-1619] Added sanity check for modActionDom constraint check
- [#MODX-1620] Fixed missing or incorrect lexicon entries across ui
- [#MODX-1612] Fixed bug where Create Menu button was not working
- [#MODX-1616] Renamed "field" to "name" in Form Customization rule windows
- Removed any non-essential JS from the top menu items
- Added additional check and error logging for processor_path option in modX::executeProcessor().
- Added missing view_sysinfo permission to default Administrator policy
- [#MODX-1595] Fixed bug regarding hiding top menu items with permissions
- [#MODX-1596] Fixed bug related to creating a new top menu item
- Fixed issues related to usergroup panels and anonymous usergroup editing
- Fixed bug in template viewer for package browser that wasnt paginating right
- Added modRestServer for generic REST request handling
- Enable remote sorting and sorting by ID on Users grid
- Fixed and enhanced search field on Users grid
- Fixed bug with duplicating a context where only the first level would duplicate
- Updated to xPDO 2.0 revision 396
- Fixed bug where package version info wasnt being computed on download/scanlocal
- Added check for locked status on resources, now shows locked status in tree, as well as who is editing
- [#MODX-1592] Fixed bug with usergroup create by moving it to a window
- [#MODX-1590] Fixed missing processors for ACL grids
- [#MODX-1526] Added permissions resource_tree, element_tree, file_tree that restrict rendering/viewing of the left-side trees. Must be applied to access policies.
- [#MODX-625] Adjusted text in config.inc.php writable warning message
- [#MODX-1586] Fixed toolbar rendering bug in user settings due to hidden div, now using hideMode: offsets 
- Added search for user box in usergroup users grid
- Changed User Group users grid to a non-local grid, now supports pagination and proper validation
- Enhanced UI for editing User Group Context/ResourceGroup ACLs
- [#MODX-1525] Added permissions field to modMenu to define policy permissions required to see Top Menu items
- Fixed bug in Packages grid to properly show provider name
- Added modRestResponse class, improved error handling for REST-based package management
- Added verification for Providers, now check to make sure they can connect before being added or updated
- Added Package View page to Package Management, allowing you to view more info about a package, view prior installed versions, and remove older package versions
- Fixed typo in setup script for PM changes
- Added version_major, version_minor, version_patch, release, and release_index fields to modTransportPackage tables to assist sorting and organization
- Fixed bug in transport schema
- [#MODX-1571] Fixed xtype in automatic_alias setting
- [#MODX-1572] Fixed deprecated error in PHPMailer service
- [#MODX-1512] Fixed bug with MODx.tree.Tree::refreshNode that caused a strange duplicate node error
- Updated xPDO to revision 392 to get new nested condition features
- [#MODX-1515] Fixed date picker CSS
- [#MODX-923] Added file path to config.inc.php configcheck message on welcome page
- [#MODX-1579] Added code to prevent invalid characters from being used in admin username/password in setup
- [#MODX-1575] Fixed bug with Resource Group getList processor
- Updated to xPDO 2.0 revision 389 
- Added validation to modContext.key field; must be a valid PHP identifier without underscore characters
- Modified modError::checkValidation() to call modError::addField() for each validation message
- [#MODX-1562] Cleaned up Site Schedule grid to properly load baseParams during refresh and adjust pagination
- Cleaned up processor code, plugin invoking, access permission checks in processors
- [#MODX-1562] Fixed bug in Site Schedule data
- Fixed OnDocUnpublished and OnDocPublished calls in processors to pass modResource reference
- [#MODX-1564] Fixed bug causing combo values to get overridden if they were set before the combo store loaded
- Move element and resource prerender plugin events to after js registering to allow for proper event execution order
- [#MODX-986] Added "Duplicate Context" to Resource tree, as well as "Remove Context"
- Fixed bug with default provider on package management UI
- [#MODX-1540] Fixed last login display in Welcome page
- [#MODX-1567] Enabled sorting in Reports -> System Info -> Recently Edited Documents
- [#MODX-1522] Restricted user editing to just the save_user permission 
- Added a "reload" button to the error log
- Fixed Active Resources on Reports - System Info
- Fixed database version query in Reports - System Info
- [#MODX-1560] Added a button to truncate manager log
- Added new browsing view for Templates in Package Management; thumbnail-based browsing.
- [#MODX-1534] Revamped file edit page to match other page structures
- [#MODX-1542] Added missing undelete permission to basic Resource policy
- [#MODX-1539] Added view_user permission to solve dropdown combo users bug that needed "edit_user"; view is more applicable there
- [#MODX-1553] Show current permissions in chmod window
- [#MODX-1539] Fixed a few bugs with the manager log page
- [#MODX-1530] Fixed permission reference in resource create/data
- [#MODX-1532] Fixed bug in permissions reference when trying to remove element from property set
- Fixed bug with login page and new controllers location
- Enhanced provider home page to allow links for newest/most downloaded packages
- Added sorting to Access Policy grid, cleaned up getList processors across site
- Fixed Manager Log page to properly display content, log the right class key, and now display the name of the object edited
- Enhanced Property Sets page to now allow you to edit specific implementations of Property Sets per element, as well as the default set
- Added "disabled" checkbox to Quick Update Plugin
- Fixed bug in modManagerResponse dealing with CMPs and templating paths
- Moved controllers/* files to controllers/default/ to allow for custom manager templating
- Fixed bugs with Property Sets not showing correctly in dropdowns
- Updated xPDO to revision 385 to fix cache_db functionality broken by PHP 5 only changes
- [#MODX-1514] Added css for pointer cursor to top menus
- [#MODX-1513] Added check for SimpleXML to installer
- Add sanity check to make sure languages arent erased on package uninstall
- Removed confirm dialog for remove action on Access Permissions grid
- Fixed panel layout for Access Policies, User Group editing
- Fixed E_STRICT warning on modX::getCacheManager() [method signature did not match xPDO::getCacheManager()]

MODx Revolution 2.0.0-beta-5 (LastChangedRevision: 6224, LastChangedDate: 2009-12-15 10:03:36 -0700 (Tue, 15 Dec 2009))
====================================
- Fixed bug where Set to Default on Resource TV panel was hidden unless you clicked Reload
- Fixed some bugs with Property Sets editing
- Fixed bug where download wasnt working for package management due to missing provider
- Fixed bug where quick create Static Resource wasnt loading MODx.Browser
- [#MODX-1496] Fixed issue with scrolling context menus not working on local grids
- Fixed styling in welcome panel
- Shrinking top menu a bit to fit in smaller window resolutions
- Fixed invalid method reference in modInstallTest derivative classes
- Fixed styling and JS in TV pane
- Fixed error with charset reference in setup/
- Clear Search in Package Browser when clicking on a Tag 
- Added Search bar to Package Browser, now can search entire repository
- Fixed height of Package Browser to not go too far down screen
- Fixed modRestSockClient to properly strip HTTP headers and return only XML
- Added modStaticResource methods: getSourceFile() and getSourceFileSize()
- Fixed bug in setup/ script with new transport package fields
- Fixed modCacheManager to not cache reg* calls that will cause breakage on similar calls to reg* method
- Added 'package_name' and 'metadata' fields to modTransportPackage for future development
- Fixed styling commits; also fixed bug on Package Management when not selecting default provider
- Added help buttons to Resource pages
- Moved TV categories in Resource edit page to tabpanel, also cleaned up button styling
- Fixed table styling. This is temporary until all tables are ported to ext grids. This affects welcome pane, system info, and online users.
- Fixed bug where package browser would close on ESC key
- [#MODX-1489] Allow spaces in Category names
- [#MODX-1497] Fixed username not being sent in new user email
- Fixed NOT NULL error in modManagerLog
- Revamped Package Management UI, changed Provider hooks to REST-based, massively improved downloading UI
- Fixed styling on the search page.
- Fixed styling on the actions page.
- Fixed styling on the manager logs page.
- Fixed triggerfields in windows in Safari
- Changed the text-size and and top margin of the Main Navbar Submenu span for more readability.
- [#MODX-1426] Added connect check to assist with mysql_get_server_info in setup
- Few style changes: Changed Button style text color to black - Previously it appeared that buttons were disabled. Changed Text color inside of combo boxes to black - As before it looked like the element was disabled.
- Modified the date fields to show a drop-down box rather than the date image. Changed the text-size and spacing of the Main Navbar to 12px.
- Fixed styling of the welcome panels.
- Fixed some issues with OnDocFormSave, plus standardized how to render fields/html to update forms
- Fixed bug with default values, @ bindings and other things on checkbox/radio TVs
- Prevent tree from expanding too much on quick create, cleaned up js
- Assigned user id/username to [[+modx.user.id]] and [[+modx.user.username]] for easier access
- Cleaned up last PHP4 remnants to PHP5-only
- [#MODX-1483] Fixed bug with TV saving in resource create processors
- Recompiled MODx.Console to use Ext.Direct, now should be a bit more stable. To end a MODx.Console session, pass 'COMPLETED' to the registry.
- Resizing the left tree now properly resizes content in the right panel and is stateful
- Added resizability to leftbar tree
- Removed no-longer-necessary js file references in resource controllers
- Consolidated filetree css/js into main css/js files
- Fixed logic error that caused removing setup directory to fail
- Combined some common JS files, cleaned up login page css, other optimizations
- Consolidated filetree extension CSS, removed unnecessary filetree files
- Consolidated CSS files in templates/default/css to one single file to reduce load times from @imports
- Added rowactions to package grid
- Improved code in @DIRECTORY binding to be more efficient and take advantage of DirectoryIterator
- [#MODX-1478] Fixed @SELECT binding
- [#MODX-1474] Fixed bug with multiple list-boxes
- [#MODX-1476] Fixed bug with TV default values with non-inherit tvs, also bug with radios/checkboxes and set to default
- [#MODX-1479] Fixed bug with duplicate DOM ids in User Group tree
- [#MODX-1480] Fixed bug with wrong permission reference in property set remove processor
- Added emptyText to local and property grids
- [#MODX-1477] Added emptyText config param with default 'No data to display' message to empty MODx grids
- documentObject was not getting set from cached Resources.
- Added inline help that loads official MODx documentation in a window
- [#MODX-900] Fixed erroneous text on site_status setting description
- Added (Inherited Value) flag to TVs that are inheriting their value
- Added category titles to TV editing panel
- [#MODX-1354], [#MODX-1475] Fixed @INHERIT and other bindings in TV inputs
- Fixed bugs with dirty status not firing for certain TV input types 
- Fixed CSS for login page
- Fixed issue where default connection charset was not persisting in setup for upgrades
- CSS tweak to get windows working properly
- Major styling updates (thanks lossendae!)
- [#MODX-1473] Fixed bug with modUser and modUserProfile PK's getting mixed, causing errors if PKs for each object were different
- Added city field to user UI
- Optimizations to Resource panel
- [#MODX-1466] Made "back" from Access Policy edit redirect to Access Controls page, made Access Controls tabs stateful
- [#MODX-1471] Added scrollOffset: 0 to grids to hide empty space on right side
- [#MODX-1469] Fixed dir handling in setup
- [#MODX-1388] Updated documentation for modX.getTree and modX.getChildIds
- [#MODX-1318] Prevent ordering of elements in dragdrop since order defaults to alphanumeric
- Made charset in setup/ a dropdown of available charsets
- Fixed collation grabbing for setup/
- [#MODX-1090] Added 'Rename File' window to directory tree
- Vast improvements to setup, including removing of mootools, using ExtCore now, simplified UI workflow to remove unnecessary AJAX calls, added in database creation checking, collation specification, etc
- Fixed bug with modPackageBuilder that would ignore the specified path for a Namespace
- [#MODX-1207] Changed modSession.id column to varchar(40) to support session.hash_function=1 with session.hash_bytes_per_char=4.
- Simplified and optimized session handling, removing older PHP workarounds and adjusting preset system settings.
- Make sure non-static Resources with binary content types get processed and output.
- [#MODX-1450] Added paging to Template combobox to allow for large numbers of templates
- [#MODX-1443] Tree sorting now works for modMenus
- Removed deprecated system settings from build
- [#MODX-1448] Fixed issue with container checkbox not persisting
- [#MODX-1426] Fixed issue with MySQL checks on non-standard 
- [#MODX-1437] Fixed duplicate policy
- Fixed some issues with Form Customization
- Added 'address' field to modUserProfile
- Added ability to edit the (anonymous) user group from the user group editing panels
- Fixed typo in usergroup get processor
- [#MODX-1018] Fixed bug with having to click the Clear Filter button in a settings grid twice
- [#MODX-1380] Fixed bug with expanding node when quick creating a resource in it
- [#MODX-1326] Fixed the access denied logout form, added styling
- [#MODX-1423] Fixed error with duplicating a template
- [#MODX-1409], [#MODX-919] Fixed issue where tag symbols were being stripped in Elements and breaking filtering and nested tag functionality
- [#MODX-1347] Fixed user validation for username missing error
- Extrapolated RTE logic to make it generic
- Added OnRichTextBrowserInit to allow for 3rd Party RTEs to hook into MODx.Browser
- Added system setting "allow_multiple_users_per_email" to allow users to have a single email shared across users. Defaults to true.
- [#MODX-972] Fixed bug when property description was changed, grid wasnt updating
- [#MODX-1390] Fixed docs for $modx->sendUnauthorizedPage();
- [#MODX-895] Fixed possible rendering issue with error log scroll bar
- Optimized setup pre-install checks, now checks both mysql client and server versions
- [#MODX-1404] Fixed mysql version checks to only show a warning if the client/server is incorrectly setup to where PHP cannot determine the versions. 
- Package Management now restricts downloading/updating Extras to their supported MODx versions (ie, you can't download packages that support only beta-3 if you have beta-4 or beta-2)
- [#MODX-1310] Fixed expand/collapse toolbar items in trees
- [#MODX-1361] Make sure cache (including Smarty files) is cleared after install 
- [#MODX-1372],[#MODX-1376] Marked deprecated functions as so in phpdoc comments
- [#MODX-1378] Fixed bug with adding a None role to a user group in the User -> Access Permissions tab
- [#MODX-1375] Fixed documentation for modX.getRequest
- [#MODX-1374] Fixed documentation for modX.getRegisteredClientScripts
- [#MODX-1370] Fixed quick create to set modResource type to modDocument properly
- [#MODX-1373] getLoginUserName and getLoginUserId now return boolean false if no user is logged in
- [#MODX-1369] Fixed validation errors and possible loophole in error processing for user processor flow
- Fixed column alignment with radio/checkbox TV inputs
- [#MODX-1350] Fixed issue where reset to default wasnt working with radio TV inputs 
- [#MODX-1360] Fixed issue where publishedon was being reset in quick update
- Sanity fixes to misc processors
- Added access modifiers to methods in modElement
- Moved name character sanity checks for Elements to element class.
- Cleaned up element processors, added missing permission checks, filled out plugin event calls
- [#MODX-1355] Fixed erroneous label for quick create resource on Contexts
- [#MODX-1352] Remove stay-buttons from user update screen 
- [#MODX-1349] onDirty now fires on triggerfield-based TVs
- Cleanups to getList processors, bugfixes for grids
- [#MODX-1317] Fixed erroneous label for quick create resource; should be Document
- [#MODX-1316] Added menu title to quick create/update resource
- Fixed issues with User grid
- [#MODX-1325] Fixed console's download to file functionality
- [#MODX-1327], [#MODX-1340] Fixed issue with generation of new password
- Fixed locking
- Lots of PHP5-only optimizations

MODx Revolution 2.0.0-beta-4 (LastChangedRevision: 5880, LastChangedDate: 2009-10-19 09:04:47 -0500 (Mon, 19 Oct 2009))
====================================
- If memory limit is lower than 24M, force to 128M if possible
- Fixing setup text for memory limit checks.
- [#MODX-1080] Make sure traditional distribution doesnt need base directory writability
- Added modInstallTestSvn class for handling SVN-specific setup tests
- Fix to setup contexts controller to read existing paths on upgrade.
- setup/ memory_limit checks now only need to be 24M for setup/ to run.
- Updated to xPDO 1.0 revision 363 to fix "Error saving changes to parent object fk field action" messages being logged during install.
- Fixed issues with category remove dialog and lexicon topic grid
- [#MODX-1294] Fixed possible obscure problem when using Preview after changing the alias in a Resource
- [#MODX-1278] Fixed issues with checkbox TVs and default values, fixed the 'set to default' button for complex inputs
- [#MODX-1280] Fixed issues with the user create processor
- Added OnBeforeUserActivate, OnUserActivate events
- Added 'active' boolean field to modUser. Defaults to 1.
- Added OnCreateUser, OnDeleteUser, OnUpdateUser events
- [#MODX-1170] Fixed issues with Export Topic
- [#MODX-912] Fixed isinrole/ismember output filter
- [#MODX-677] Made capitalization consistent on Resource edit/create screen
- [#MODX-1251] Fixed issue with server offset displaying incorrectly
- [#MODX-896] Fixed issue with server_offset setting description
- [#MODX-928] Fixed issue where parent resource wasnt refreshing properly
- [#MODX-777] Made consistent the checkDirty behaviour of save buttons across manager
- [#MODX-938] Added check to build to check if core+core.transport.zip were removed before build starts. 
- [#MODX-629] Added missing automatic_alias setting to build
- [#MODX-790] Fixed issue where couldnt browse back to root directory with MODx.Browser
- [#MODX-902] Fixed empty warning message for removing category
- Fixed bug with removing categories
- Fixed issue where couldn't drag a resource onto a resource with no children
- [#MODX-1130] Fixed issue with parent triggerfield; also redid how tree hrefs load so that clicking on a node in the tree to load url can be disabled
- [#MODX-1133] Fixed issues with hotkey behavior
- [#MODX-1230] Fixed issue where drag Resource to symlink/weblink content field would add tags as well
- [#MODX-1273] Added OnLoadWebPageCache event invocation to modRequest->getResource().
- [#MODX-1273] Fixed events in User update/create form
- Enabled compression of manager JS scripts by changing the Setting "compress_js" to true.
- Upgraded ExtJS to ExtJS 3.0.2
- [#MODX-1270] OnManagerCreateGroup and OnWebCreateGroup events now fire
- [#MODX-1237] Fixed warning in modParser with regards to uninitialized variable
- [#MODX-979] Added password_generated_length (the length of the auto-generated password) and password_min_length (the minimum length for a password)
- Cleaned up usergroup processors
- Added sanity checks to usergroup processors
- Prevent possible issue on usergroup update that would wipe related objects
- Prevent possible issue that would allow user to remove Administrator group
- Removed some legacy todo statements
- Moved Element category reset on modCategory object remove to modCategory class
- Cleaned up modResourceGroup, modTemplate helper methods
- Added modUser::joinGroup(group,(optional)role) and modUser::leaveGroup(group) for easier development 
- Optimized getrecentlyeditedresources processor
- Make sure config.js.php outputs proper headers
- Commented out Content-Length headers on lang.js.php, for some reason was slowing down servers
- [#MODX-1256] Fixed issue with Resource tree not being visible in Resource Groups page
- Fixed issues with Import HTML/Resources pages; properly convert to MODExt
- [#MODX-1202] Fixed issue where Element name was missing in Duplicate window
- [#MODX-1233] Fixed bug where categories could only be renamed once before needing to reload page
- [#MODX-1248] Fix bug that could wipe TV values if tab wasnt loaded
- [#MODX-1241] Fixed Preview button on update panels
- Prettying up of TV fields
- Now display SVN revision number with version in top left of mgr header
- Fixed issues with TVs setting values incorrectly
- Added "Set to Default" button on TVs that will reset the TV's value to it's default value. TV Resource values can now be set to blank as a valid value.
- [#MODX-924] Fixed errors in various system setting descriptions
- [#MODX-935] Tooltips in Resource tree now do not show if no description or longtitle is set
- [#MODX-1120] Now shows TV names in tag form below the caption in the TV editing panel in Resource editing 
- Fixes to plugin event calls in controllers
- Fixes to filetree to enable in Ext3
- [#MODX-1112] Fixed issue where checkboxes in grids werent firing dirty statuses
- [#MODX-1229] Fixed issue where default hidemenu setting in Create Static Resource was setting incorrectly to true
- Added some extra variables for RTE firing; also made sure MODx.loadRTE fires on new resource creation. Fixes [#TINYMCE-9], [#TINYMCE-8]
- [#MODX-523] Fixed copy issue in console by providing "Download to File" link
- [#MODX-649] Fixed issue where comboboxes were not loading proper displayValue when first rendered
- Added category combobox to quick update/create windows
- [#MODX-1019] Added missing site_unavailable_page System Setting.
- [#MODX-1226] Removed modResource->checkChildren() method; isfolder should not be set based on presence/absence of children.
- [#MODX-1213] Fixed issues with WebLink creation and loading
- [#MODX-1178] Fixed issue where checkbox TVs were unable to be set to false; properly rendered values into a hidden field
- [#MODX-1204] Implemented $matchAll for modUser::isMember, that allows exclusive and inclusive group membership checks
- [#MODX-1203] Now preserves state of open tabs in left bar
- Added "Form Customization" page, which emulates Evolution ManagerManager functionality and integrates it into the core
- Revamped modMenu DB structure to allow for more proper dynamic menus; 3PCs will need to now refer to the Components menu as 'components', as the "id" field has been dropped and "text" is now the PK
- Fixed DOM issue with Profile page
- Improved core transport build script, lowered build times
- Fixed issue where hiding the alias field would cause it to be erased
- [#MODX-1169] Fixed issue where unchecking Container on a Resource that had children would hide them from the tree
- [#MODX-1125] Fixed issue where Properties were being lost on new Elements
- Fixed some dirty field problems in Element/Resource forms
- [#MODX-1167] Improved isFolder checkbox tooltip
- [#MODX-929] Changed default click functionality in Tree menu to edit Resources, unless does not have permission to, will then go to View
- Fixed navbar structure on main menu to properly handle infinitely deep nested menus. Needs help from a CSS guru on the CSS end.
- [#MODX-1161] Fixed bug with height argument on modX::getParentIds
- Documentation updates to modResource class
- [#MODX-1189] Fixed issue with TV values not setting properly with modTemplateVar->setValue
- Added modResource->getTVValue, which gets the value of a specified TV for the Resource
- [#MODX-1177] Adjusted Lexicon Management text to properly represent functionality
- Added more metadata to Lexicon Topic exports
- [#MODX-1191] Fixed issue where Namespace combo was conflicting with other DOM IDs in Lexicon Management
- Changed Accordion to Tabs in left menu
- In all Resource panels, Moved Page Settings back to right side, moved Template to top, moved Published to top right 
- [#MODX-1173] Added modResource->hasChildren() function. Returns # of children for the Resource.
- [#MODX-689] Fixed error when using @SELECT binding with Template Variable Input Option values.
- Fixed issues with modMenu creation/editing
- [#MODX-1132] Various fixes to the user editing page
- [#MODX-1123] Fixed bug where properties were not saving on new elements
- [#MODX-683] Changed title for 1st tab on Resource edit screen
- [#MODX-1118] Tweaked MODx.combo.ComboBox and other store references to possibly fix local store bug
- Fixed issue with Sort By dropdown in the Resource Tree
- Fixed issues with User Group update page
- Added modAccessPermission class to properly handle access policy permissions
- Adjusted UI to handle model change
- Added logic in setup install to clear sessions table after install to prevent access permission changing problems (and is a good general practice anyway); users will have to re-login after setup/ is run.
- Cleaned up access policy grid
- Default sort roles by authority
- Removed no-longer needed Security pages; now done in Access Control and User Group edit screens
- Started cleanup of Security system; changed 'Authority' listing on User Group page to a more correct "Minimum Role".
- Added some IDs to resource edit page
- [#MODX-1124] Took Templates off the list of attachable elements in Tools | Property Sets

MODx Revolution 2.0.0-beta-3 (LastChangedRevision: 5593, LastChangedDate: 2009-07-30 11:14:17 -0500 (Thu, 30 Jul 2009))
====================================
- Fixed issue with scrollbars and height in tree context menus
- [#MODX-963] Fixed issue with scrollbars and height in grid context menus
- Fixed possible error in lang.js.php
- [#MODX-982] Added param stringLiterals to directory/getList processor
- [#MODX-978] Updated PHPMailer to 2.0.4
- [#MODX-960] Fixed DOM issue with User Group creation/editing screen
- Added ability to drag/drop files in file tree into fields
- Fixed issue with file tree hiding files
- [#MODX-960] Fixed erroneous header in Manage User Groups and Roles
- [#MODX-965] Removed Disabled field from Package grid since it currently is unapplicable
- [#MODX-964] Fixed issue with toolbar buttons in package download tree by removing unneeded buttons, fixing refresh button
- [#MODX-966] Changed Package Management grid to be easier to read, removed unnecessary information
- [#MODX-962] Fixed issues with User panel screen
- Replace deprecated split() call in magpierss class with explode(). 

MODx Revolution 2.0.0-beta-2 (LastChangedRevision: 5416, LastChangedDate: 2009-07-16 13:15:41 -0600 (Thu, 16 Jul 2009))
====================================
- [#MODX-1029] Fixed incorrect URL references in browser controller template
- Updated version info for beta2 release
- [#MODX-942] Made sure all get-based processors use REQUEST, not POST
- [#MODX-937] Added 'Download Extras' button to package grid which loads modxcms.com provider
- login processor does not return site_url in response by default.
- modResponse->outputContent() allows programmatic options to configure max_parser_iterations.
- Updated xPDO to revision 341: package uninstall preserves and restores file resolver data
- Changed key shortcuts to always require ctrl+shift to prevent browser collisions
- Added in field for description key in modMenu windows
- [#MODX-931] Added isequal, isequalto, and notequalto as modifier aliases to default Output Filter
- Fixed issues with pagination on settings grids
- Fixed ENTER key issues on quick create/update windows
- Added &language option to lexicon tags.
- Added ability to load lexicon topics via tag: [[%key? &namespace=`mynamespace` &topic=`mytopic`]]
- [#MODX-910] Fixed issues with gte/lte/gt/lt output filters
- [#MODX-921] Added "isempty" as an alias of "ifempty" in output filters
- [#MODX-920] Fixed wordwrap output filter
- [#MODX-914] Added isnotempty and hide output filters
- [#MODX-913] Added isloggedin and isnotloggedin to output filters
- Upgraded ExtJS from 2.2 to 3.0
- [#MODX-925] Fixed issue where name couldnt be changed on duplicate resource window with resources with children
- [#MODX-911] Fixed dragability issue when assigning resources to resource groups
- [#MODX-901] System Settings grid search now searches descriptions 
- Added 'afterLayout', 'loadKeyMap', and 'loadAccordion' events to MODx.Layout
- Fixed bugs with File TV input renders
- [#MODX-887] Properly standardized POST/REQUEST access methods for element processors
- Fixed issues with user emails being sent in plaintext with no linebreaks; now HTML-based for the time being
- Package Download tree now disables already downloaded packages.
- [#MODX-885] Fixed missing break statement in cat output filter
- [#MODX-844] Fixed ucfirst output filter, added ucwords output filter
- [#MODX-869] Added missing descriptions for certain menu items
- [#MODX-868] Fixed bug on settings grid where filter box was not firing on enter key
- Fixed bug where hidemenu was not persisting in Quick Update Resource
- Fixed bug with tree mask rendering before panel is rendered
- [#MODX-747] Fixed issues with access grids update windows
- [#MODX-803] Fixed DOM issues with TV mgr input property renders
- [#MODX-805] Fixed attribute issues with TV web output renders
- [#MODX-859] Changed login page loader box to say 'Loading...' instead of 'Saving...'
- [#MODX-860] Fixed z-index issues across manager
- Added a custom loadMask to MODx.tree.Tree objects to display when they're loading but not affect page focus
- Added a custom loadMask to the Package Management download tree to display while loading the remote provider payload
- Added in icon for package files
- Added fsockopen as a fallback for transport package if allow_url_fopen or cURL is not enabled
- [#MODX-856] Added cURL method of grabbing transport packages when allow_url_fopen is set to false
- Fixed bug in property update where list grid was not hiding if list xtype was previously selected but not now
- Fixed import properties where it was not properly handling descriptions
- Fixed bug where ExtJS couldnt handle text/json header responses with fileUpload set to true in form panels
- Fixed some DOM issues with Package Management
- [#MODX-833] Temporary fix for modManagerLog message showing up in console
- [#MODX-853] Changed source caption of view resource data
- [#MODX-809] Adjusted formatting of View Resource data fields 
- Fixed bugs with Resource data page not loading fully, glitching tree
- [#MODX-772] Fixed bug where plugin events were not showing enabled if filtered by name
- Fixed user system event calls to pass proper arguments
- Fixed bug where you could only load 1 Quick window at a time
- Fixed bug with duplicate resource
- [#MODX-845] If no setup options are specified, package installation will automatically proceed
- Added parameter to the getNodes processor for resources/elements called 'stringLiterals' which, when true, does not encode the JS literals
- Layout can now be toggled between tabs (default) and portal panels via the setting 'manager_use_tabs'
- Nuked the Loading Box in MODExt
- Changed clearCache key shortcut to CTRL+U (CTRL+SHIFT+U for PC users)
- Fixed issue where folder resources couldnt be drag/dropped
- Added some key-events: CTRL+H for hiding accordion, CTRL+U for clearing cache, CTRL+N for Quick Create Resource (PC users will need to add SHIFT to all those calls)
- Fixed portal issues with Safari
- Added a few events to MODx. JS object, cleaned up code
- Added sanity checks to context/category create/update processors
- [#MODX-766] Added check to prevent settings starting with numbers
- Added ability to update plugin events and dynamically manage plugins associated with them by right-clicking on them in the Plugin Event grid
- Added 'beforeSubmit' listener to MODx.Window
- Adjusted TreeDrop code to allow for RTEs to utilize drag/drop features
- [#MODX-827] Fixed typo in resource container help string
- Added prevention fix to prevent dragging of non-elements/resources into content panes
- [#MODX-770] Fixed bug with creating Symlink
- Fixed issues with creating and editing a static resource
- Fixed bug with treedrop that set boolean values to string representations; changed to 1/0
- Fixed missing context menu item to remove new properties in a property set
- Added functionality for Element Tag Builder to use descriptions of properties
- [#MODX-817] Redid Clear Cache window to use MODx.Console
- Lexiconized missing "Copy to Clipboard" string
- Slight tweaks to MODx.Console to get messages to display final ending messages properly
- Changed invokeEvent missing event warning to debug msg to prevent it from logging in every console output
- [#MODX-818] Fixed issues with Quick Create where it didnt work in FF, missing lexicon strings
- Added Visual Element tag builder when you drag/drop an element into a field
- Resources/Elements can now be dragged from tree straight to Resource Content pane.
- Removed Spotlight effect on dialogs; was unnecessary.
- Fixed bug in Namespace creation window that was preventing namespace from creating
- Added refreshes to comboboxes in Lexicon Management to refresh combos on Namespace/Topic creation to keep panels up-to-date
- Fixed Safari issue with Element tree displaying funky on certain pages
- Fixed issue in Safari where combobox trigger was on left side
- Only set lexicon entries for context/user settings if they dont exist as system settings
- Fixed issue with Actions panel causing accordion DOM to bug
- Fixed issue with Quick Update not persisting class_key
- Fixed some issues with persistent settings for Quick Update Resource
- Fixed issue with Quick Update Resource content field being too long
- Fixed invalid lexicon entry reference for quick create resource
- Added Quick Create/Update Resource
- Preview context menu option now is "smart" and builds FURLs and separate context references
- Fixed invalid topic reference issue with modLexiconEntry::clearCache()
- Fixed headers for connector responses
- Added Quick Create/Update for all Element types
- Fixed bugs with category setting in Element processors
- Added Clear Cache checkbox option to all Element type forms
- Fixed bug with Category dropdown
- Fixed tv input properties forms from double-rendering 
- [#MODX-804] TV fields now fire resource change event
- Fixed bug in Safari with TV fields being uneditable if panel is dragged 
- [#MODX-745] Added 'cancel' button to go back to policy page when updating a policy 
- [#MODX-573] Removed no-longer-applicable 'role' column from users grid, fixed capitalization issues in processors
- [#MODX-762] Added in missing lexicon entries to hardcoded strings
- Added modx.localization.js for i18n translations
- Added indexes on modLexiconEntry table
- Properly formatted lexicon strings still using sprintf
- Fixed bug where created was not set on transport package creation
- Made sure package grid paginates correctly if number of packages installed exceeds 20
- Fixed Last Modified On on Lexicon grid
- Optimized action, menu, language, content-type, lexicon, namespace processors
- [#MODX-765] Added fix to prevent creation of blank system settings
- Fixed bug in Safari with TV widget properties rendering
- Consolidated resource getNodes processor, added access policy checks
- Added sanity check to toJSON function in modConnectorResponse
- Properly refactor element tree to point to correct processor
- Added delegate processors for different modes in element tree
- Updated Context policy attributes for missing attributes 
- Fixed invalid category reference on chunk update processor
- Added log error messages if save()/remove() fails on modElement derivatives
- [#MODX-771] Fixed invalid lexicon string reference in element tree
- Added WARN log message when executing a system event that doesn't exist
- Filled out missing access policy checks in element processors
- Fixed incorrect and missing permission check in snippet get/getList processors
- Fixed invalid lexicon reference in template processors
- Optimized templateTV getList processor to use only one query
- Optimized plugin event getList processor to use only one query
- [#MODX-194] Added sanity checks to element names
- [#MODX-792] Added check to prevent user from creating blank context, other sanity checks
- [#MODX-475] Prevented adding contexts with _ in name; will auto-strip
- [#MODX-796] Fixed check for valid passwords in setup
- Fixed problematic reference to $_lang
- Fixed improper log message reference in lexicon's reloadFromBase processor
- Additional access control defects and warning messages resolved for anonymous users.
- Fixed access control defect which prevented multiple policies from being respected per principal.
- Fixed issue with Policy Attributes not adding b/c id was not passed in
- Added 'save' event fire to Element/Resource formpanels
- Properly setup on*FormRender events for Element classes
- Added MODx.onSaveEditor check, which will fire on form save, that allows 3rd Party Components to execute JS code on Element/Resource saves
- Major refactoring to modx.actionbuttons, to render faster, as well as properly register events and button configs
- Allowed OnRichTextEditorRegister to return a string as well as an array
- Added MODx.releaseLock(id), which releases the lock on a Resource for a given ID
- Added MODx.sleep(ms), which sleeps the UI for a given number of milliseconds (useful in async calls)

MODx Revolution 2.0.0-beta-1 (LastChangedRevision: 5070 , LastChangedDate: 2009-05-28 16:20:08 -0500 (Thu, 28 May 2009))
====================================
- Fixed issue with cacheable toggle on derivative Resource pages
- Fix error message when reading expired messages in modDBRegister.
- Fixed issue with login page JS
- Fixed issue with derivative Resource classes JS not loading Page Settings data into submit
- Fixed issue with utilities JS not loading at right time
- Updated build.xml to produce beta releases.
- Quick fix to prevent blank attribute referencing
- Fixed issue with package attributes and skipping blank options
- [#MODX-723] Fixed issue where preview pane was picking up CSS from preview
- Updated xPDO to revision 333.
- Fix issues with Page settings defaulting to 1 on resource creation
- Adjusted order of JS utils loading to make for easier min-concat loading
- Cleanups to JS to prepare for beta-1
- Lexicon updates
- Updating outdated copyright notices in source code headers.
- Fixed hardcoded version number in setup.
- Added request_controller system setting to indicate the front-controller file (default=index.php).
- Fixed array_merge warnings in modLexicon.
- Added back support for anonymous user access control.
- Added support for returnUrl parameter to be sent to login processor to allow unauthorized responses to return to the original requested page directly (NOTE: this overrides manager_login_startup and login_startup parameters, but does not work with POST requests: these will simply return to the URL with only GET parameters).
- Export lexicon now prompts for download of exported file
- Enhanced User Group update/create screen to now have grids that allow you to assign Resource Group / Context permissions to that user group. This will help clear up confusion with the access relationships.
- Fixed scope issue in accordion.css that was causing odd behaviours with panels in the main content
- Adjusted setup procedures to allow for more lexicon support for pre-load checks
- Adjusted setup lexicon to allow for multiple topics; conformed upgrade scripts and other references to match
- Consolidated similar code in setup, esp. with regards to fatal errors
- Added smarter checks for xPDO failures in connectors
- [#MODX-744] Fixed issue with invalid display of num cleared on cache claering
- Fixed bugs with updating packages from a remote provider
- Made sure package attr returns '' if false
- Fixed manager log to show username, not user ID
- Standardized derivative resource form panels to move page settings to left
- Tweaked tree menu headers
- Minor IE overrides for top navigation and accordion panel.
- Added support for modLinkTag properties as url parameters, with context reserved to indicate a context to send to makeUrl().
- Fixed error in modLinkTag when passed invalid data.
- Added '@RESOURCE' binding alias so as to deprecate @DOCUMENT binding
- Fixed default language setting for modLexicon
- Fixed a couple issues with the page settings checkboxes for resources
- Removed deprecated _tx_.gif 
- Removed home icon and replaced with tab
- Adjusted CSS to align main content page vertically
- Trees now have fun new icons representing their types (this includes the resource, element and file trees)
- Cleaned up the default.inc.php lexicon topic to remove any no-longer-used entries 
- Fixing typo in subtract output modifier
- Fixed improper reference in TV property renders for mgr context
- Updated xPDO to revision 329.
- Improvements to sendError() behavior.
- Added lock stealing processor and updated remove_locks processor.
- Added steal_lock:true policy attribute to default Resource policy to allow lock stealing permissions by ResourceGroup.
- modTemplateVar: Fix getValue() on `value` field by storing and verifying the value requested is cached by the same resource.
- modResource: Add resourceId value to getMany() on modTemplateVar to identify the resource caching a value on the modTemplateVar instance.
- modX: Set logTarget based on XPDO_CLI_MODE; ECHO for CLI and HTML for non-CLI requests.
- modX: Add sendError() function to provide customizable, named error pages on FATAL or other critical error situations.
- modX: Refactored sendForward(), sendErrorPage(), sendUnauthorizedPage() functions to allow an array of options and better handle FATAL errors.
- modCacheManager now Caches related modContentType data to prevent unnecessary database connection/query on fully cached pages.
- Fixed problem with modStaticResource truncating the content to the size of the static file by setting the content length header on non-binary content types.
- Fixed problem with modStaticResource non-binary content types rendering the path to the static file rather than the actual content of the file.
- Calling modX->log(MODX_LOG_LEVEL_FATAL) or modX->messageQuit() now logs the error to file and then renders {MODX_CORE_PATH}errors/fatal.include.php.
- Updated to r325 in xPDO: xPDO method changes to getOption() and _log().
- Update 'setup-options' ability in transport packages to allow for script-based setup options that will properly handle upgrades to setup options default values 
- Updated to r323 in xPDO: Revise xPDOTransport::writeManifest to make 'setup-options' be able to be an executable script to allow for dynamic form ability
- Updated snoopy class to version 1.2.4 (used by magpierss).
- [#MODX-535] Removed automatic setting of isfolder based on presence or absence of children.
- [#MODX-499] Site start Resources now return base_url from modContext->makeUrl() if no scheme is specified (i.e. when expecting relative links).
- Improved error reporting on modX->makeUrl() to show original $id value being passed in on failures.
- modLinkTag no longer returns empty values on first pass of parser, allowing delays until the value returns a valid value.
- Implemented modResource editor locking (added modResource methods: getLock(), addLock($user), removeLock($user)).
- Implemented modResource locking features in all appropriate processors.
- modResource->checkChildren() now uses modX->getCount() to determine if children exist.
- Added steal_locks attribute to Context access policy.
- [#MODX-728] Made sure config check dialog is hidden if no warnings are present
- Package Installations will now skip license agreements / readme panels if none are specified
- Made sure More Info in download panel can scroll
- Fixed issue with spacing in setup options panel of package install
- modCacheManager->generateScript(): Fixed PHP notice in log message on error.
- modInstall: Modify _modx() function to call setDebug with E_ALL & ~E_NOTICE instead of E_ALL & ~E_STRICT.
- Optimized queries in element tree to eliminate subqueries or queries in loop, reducing to O(n) instead of O(n^2n)
- Made clear cache results a bit smaller 
- Refresh trees after clear cache
- [#MODX-609] Clear cache menu item now loads results in an alert dialog. No longer loads a separate page.
- Fixed to template getlist processor
- [#MODX-671] Fixed bug with resource group access permissions being checked when not assigned
- [#MODX-699] Fixed to allow usage of login processor without lexicons 
- Added Import/Export to element properties grids, which allows for file-based transporting of properties.
- Fixed issues with comboboxes dropping down a blue screen
- [#XPDO-28] Fixed problem with multiple file resolvers on vehicles with similar basenames cause directory contents to merge unexpectedly. 
- fixed PHP notice for missing elementType variable 
- fixed subcategory elements missing from display (was counting elements in parent category rather then subcategory to determine if the subcategory should be displayed)
- Fixed issue with default properties in TVs being locked
- Fixed no onTVFormPrerender
- Made sure clearDirty is fired on TV panels
- Tweaked the css and updated copyright year.
- Refactored all index.php gateways to support constructor options set as $options in the various config.core.php files.
- modCacheManager/modCache: Introduced cache partitioning allowing various cache provider implementations to target specific MODx cache partitions and provide custom (system/context/user) settings for configuration options to each: cache_system_settings, cache_context_settings, cache_resource, cache_scripts, cache_lexicon_topics, cache_action_map
- modAccessibleObject: Refactored object and collection loader logic to improve cache hit rates.
- modRequest: Fixed warning for undefined variable $fromCache.
- modSessionHandler: Refactored write() method to only update access time when the session data has changed or at specified intervals before the data is made available for GC.
- modSessionHandler: Added support for cache_db_session, a new configuration setting to allow session data to be cached when cache_db is enabled.
- modTemplateVar: Allow getValue() to use a `value` field for data if already populated for a specific resource.
- Commented out missing image in welcome.tpl (temporary)
- Added couple of bugfixes to modDBRegister to prevent duplicate payloads and update existing messages.
- Fixed bug where QuickUpdateChunk was persisting values
- Added fix to prevent DOM id problems
- Added clearCache checkbox to chunk editing to allow toggleable cache clearing
- Optimized chunk processors
- Added 'Quick Update Chunk' and 'Quick Create Chunk' options to Elements tree, which allows you to quickly edit or create chunks via a window straight from the Element tree on any page
- [#MODX-718] Fixed bug where elements without a category wouldn't show
- [#MODX-697] Fixed problem with deprecated role topic still in action build scripts
- [#MODX-705] Removed random numbers causing Radio TVs to render improperly
- Fixed bug that caused policy data to be erased when creating/saving/removing policy data
- [#MODX-711] Fixed Update Context screen to properly pass correct PK
- modDbRegister: fixed bug with expired messages not being removed if remove_read => false
- modDbRegister: allowed messages to be updated/overwritten
- Fixed modCacheManager::prepare() - was returning false on already-prepared contexts
- Added support for nested categories for elements; categories can now have subcategories
- Fixed to treestate to properly set treestate ID so restore can work properly
- Fixed call to onDocFormRender to make sure ID is passed on Resource update
- Fixed to getFiles processor for MODx.Browser to properly store URL parameter with the base_url prefixed
- [#MODX-712] Fixed errors creating context settings
- modX: Fixed potential error when invokeEvent() is called and executes a plugin with property sets and pluginCache does not contain the object
- modCacheManager: Fixed error when building the pluginCache with property sets
- modCacheManager: Fixed typo in parentSql that was breaking use alias paths option.
- modCacheManager->generateContext(): Added support for Resources to be generated in multiple contexts via modContextResource.
- modParser: Removed errant log() statement in parseProperties().
- modParser: Fixed problem in parsePropertyString() when passing `escaped` property values containing semi-colons (;).
- Added in necessary reloading functions to ColumnTree
- Fixed issue with column tree's context menu overriding the ID
- modManagerResponse: Detect if controller responses are error arrays and render using error.tpl appropriately.
- [#MODX-693] redirect bug - modResponse logic error
- Moved core/config/version.inc.php to core/docs/version.inc.php
- layout/tree/resource/getnodes.php: Additional optimization to reduce memory usage and improve performance when opening Resources containing a large number of children.
- modConnectorResponse->toJSON() optimized to greatly reduce memory usage and improve performance with large result sets.
- [#MODX-691] allow User Settings to be saved from prop. grid
- Fixed bug with documentMap
- Fixed issue with default tv render panel for resource page
- [#MODX-690] Fixed a few events names registered in the system_eventsnames table during build/install
- Added id's to element and category nodes for informational purposes (missed one spot).
- Added id's to element and category nodes for informational purposes.
- Updated drag and drop behavior to update context_key of all child Resources when dropping a container on a different context node.
- Modified modTransportPackage.manifest field from MEDIUMTEXT to TEXT in order to handle large manifests.
- Fixed aliasMap broken in recent cacheManager refactoring.
- Added helper functions to MODx.tree.ColumnTree
- Added DD events to ColumnTree
- Added missing column tree CSS
- Added UI for adding property sets to PluginEvents
- Added cacheManager object checks to verify for PHP4 installs
- modCacheManager->generateResource(): added validation of the modResource primary key before attempting to cache a record.
- modUser: modified storage of session data to use the modUser primary key value to isolate values associated with a specific user; this will allow users to login as multiple users on the back-end and/or front-end without affecting the session data associated with a specific user.
- modX->_initSession(): Enable session_gc_lifetime configuration setting to set session.gc_liftime ini setting regardless of what session handler is configured.
- modPluginEvent: Added the ability of plugins to utilize Property Sets by allowing a plugin registered to a particular event to attach a Property Set and make it available during processing.
- Fixed warning with loading of RTEs in resource page
- [#MODX-674] Fixed content-dispo combobox bug
- Removed allowBlank: false check on menuindex to allow for dynamic creation
- Added in missing lexicon entries for prior menuindex commit
- [#MODX-678] Added back in 'menuindex' field to resource panels
- Added missing modX::__construct() options parameter.
- Allow for extending of MODx.panel.ResourceTV by making reference to modx-resource-template field dynamic
- Fixes for RTE loading
- Fixed issue where smarty template path was not being reset if 3PC set path to something else
- modX constructor now accepts a second parameter containing an array of options to be set in the config
- Major refactoring of modCacheManager to provide more granular caching options
- modCacheManager now accepts options, based on changes to xPDOCacheManager, and provides access via getOption()
- generate*() methods now all return data as well as cache it to a specified cache_handler unless otherwise configured
- modX->getCacheManager() no longer supports MODX_CACHE_DISABLED or config['cache_disabled']; the cacheManager is required, though you will still be able to effectively turn off all caching in the future via this setting (this will be worked back in)
- manager/controllers/system/refresh_site.php changes to better target things to remove from the cache
- Introducing modDbRegister and the modx.registry.db package, providing a database modRegister implementation.
- Added new system settings for individual cache areas, i.e. cache_system_settings, cache_context_settings, cache_lexicon_topics, cache_scripts, etc.
- modCacheManager: Various fixes and adjustments to latest refactoring, including clearCache improvements.
- manager/controllers/system/refresh_site.php: Improvements to default clearCache call.
- modCacheManager: converted generateActionMap() to support configurable cache implementations
- Updated modAction->rebuildCache() and modManagerRequest->loadActionMap()
- Additional tweaks to manager/controllers/system/refresh_site.php
- Updated xPDO externals to revision 308 
- Removed unnecessary comments from the reg* functions
- Moved all manager pages JS/CSS to inside HEAD tag using the reg* functions; this improves speed and validation of the manager
- Fixed the way 3PCs handle their controller files. NOTE!!! This means that you no longer need a "core/controllers" file in your 3PC; just set the namespace path correctly, then set the controller in your modAction.
- Added an ability for mgr pages to utilize regClientStartupScript and other reg* functions to make pages load faster and move JS/CSS to HEAD tag
- modX->getEventMap() - Made sure prepare() creates a valid statement before calling execute()
- Updated modStaticResource to set headers in getFileContent() for now, though this needs to be refactored for flexibility.
- Fixed issue with saving TVs from create resource processor
- [#MODX-637] Fixed issue with TVs not reloading on changing template in new resources
- [#MODX-663] Fixed various issues with modAction creation
- Fixed issue with MODx.Browser uploads not refreshing the main view
- Fixed publishedon default date setting
- Fixed date TV default value
- Fixed default setting for symlinks
- Fixed issue with Symlink/WebLink class_key storing
- Fixed issue with textfield editing in Safari on Property Set grid
- [#MODX-662] Fixed duplicate issue with elements
- Fixed issue with property sets page and property lock
- Fixed name issue on duplicating elements
- Fixed symlink page setTimeout issue
- Fixed missing file inclusions
- Fixed element tree where categorized templates weren't showing
- Added editing ability to resource's publishedon date
- Fixes to package downloader panel due to ID conflicts
- Adjusted modTransportPackage::transferPackage to rename incoming file to [signature].transport.zip rather than basename($source)
- Fixed xml/json response classes to properly work
- Added permission "unlock_element_properties", which gives ability to unlock editing of default element properties.
- Added implementation of above permission into element properties grid
- Fixed some logic issues with the lockMask
- [#MODX-561] Added "Locked" ability to default properties for elements
- [#MODX-633] Fixed issue with add another not respecting parent
- Fixed TV access panel not working on new TVs
- Fixed state management with tree nodes
- [#MODX-661] Fixed URL TV input, where it was not setting prefix value
- [#MODX-659] Fixed bug where root-level docs couldnt be updated b/c of parent issue
- Fixed bug with parent being assigned to 0 always in derivative Resource classes
- Made sure bad resources (where parent = id) are ignored when building the context cache files.
- Fixed parent bug in controllers
- Fixed transport.data.php with 'namespace' key on modActions
- [#MODX-622] Updated top menu structure to be more consistent.
- Fixed error if properties are null
- [#MODX-651] Fixed bug when deleting a propset, would not empty grid
- Fixed to resource page combos not setting display value correctly
- [#MODX-658] Fixed issue where in TV -> Create, templates were not showing
- Fixed template nodes to properly sort by templatename
- Adjusted resource menus and such to refer to a 'Resource' without a specific class_key as 'Document' when applicable, with the exception of talking about Resources in the generic sense
- Added Duplicate option to Property Sets
- Fixed bug where template inheritance for resources wasn't happening
- Fixed symlink page
- [#MODX-632] Updating xmlrpc to 2.2.1
- Corrected logic in setup to allow forced PDO emulation mode (XPDO_MODE == 2).
- Added `category` field to modPropertySets; they can now be categorized
- Enhanced UI to support new modPropertySet category ability
- Modified MODx.Window so that the ENTER key submits the form
- Added more IDs to element forms
- Added ability to "remove" overridden properties, but only ones that are not in the default propset (ones that are should "revert")
- Fixed OnWebPagePrerender event not firing as expected.
- modOutputFilter: Refactored date modifier to return '' if the timestamp encountered == 0 or -1.
- modOutputFilter: Added strtotime modifier.- Refactored connectors to execute in the context from which they are called, rather than their own context.
- Updated xPDO to revision 304 for new xPDOFileVehicle feature to respect XPDO_TRANSPORT_RESOLVE_FILES options.
- [#MODX-562], [#XPDO-24], [#XPDO-25], and [#XPDO-26] Updated xPDO to revision 302 to resolve various issues regarding transport packages and model generation.
- [#XPDO-23] and [#MODX-604] Updated xPDO to revision 298 to resolve nesting error when logging messages during installation with improper cache directory permissions.
- Added modPropertySet->getElements() method as shortcut to get all proper modElement instances available to the set.
- Added overridden modElementPropertySet->getOne() to get related Element using the proper element_class value.
- [#XPDO-21] Updated xPDO to revision 290 for updates to xPDOObject::addOne() and addMany().
- [#MODX-553] Unpublished and deleted Resources now ignored properly in modRequest::getResource().
- [#MODX-553] Core setup now automatically adds an ACL to the web context for members of the Administrator group.
- Core setup now updates the Administrator group ACLs for accessing the mgr and connector contexts with an Authority of 0 (highest authority).
- Modified OnUserNotFound event handling not to rely on references which no longer work properly with recent changes to property handling.
- Added overridden modElement->get() to handle converting legacy property strings stored in the database.
- Added modPropertySet class to represent persistent sets of properties that can be applied to modElement instances.
- Added support for modElements to relate modPropertySet objects via modElementPropertySet (many-to-many).

MODx Revolution 2.0.0-alpha-6 (LastChangedRevision: 4485 , LastChangedDate: 2008-11-25 11:58:49 -0600 (Tue, 25 Nov 2008))
====================================
- [#MODX-395] i18n'ed the modMail classes, added lexicon topic 'mail' for handling mail strings
- Added check to make sure user cannot browse to subdirs with ../ in connector processor fetching
- [#MODX-482] Implemented code to remove setup/ directory when box is checked.
- [#MODX-408] Fix atrocious grammar in mail reception message
- Fixed labels for static resource page
- [#MODX-518] Make sure clearing cache clears registry output from package
- Fixed in_array() checks against $_currentTimestamps in xPDOObject::save() that prevented timestamp/datetime fields from saving 0 values.
- [#MODX-512] Fixing check in setup to make sure core/packages is writable
- Fixed bug with RTE loading and saving
- Changed 'Provisioner' references to 'Provider' in UI for nomenclature consistency purposes
- Added lexicon load to resource processors
- Fix error on resource view when template is empty.
- Added namespace filter to settings grid
- Fixed import trees
- Hide the resource ID field if a new resource
- [#MODX-514] Fixed issue with pub_date/unpub_date not being reset properly
- [#MODX-484] Added missing ht.access sample to web context files in included in transport package. 
- Modified modWorkspace vehicle attributes to XPDO_TRANSPORT_UPDATE_OBJECT => false
- Updated xPDO to revision 284 for new xPDO package-aware vehicle features when loading classes.
- Slight styling improvement to grid to make alt-rows more apparent
- Added clearCache() functions to modLexiconTopic, modLexiconLanguage
- Added 'collapsible' options to the options tabs of resources. Can now collapse them to show only the content editor.
- Prevent blank property value names
- Adding css classes to modext components for easier styling
- Fixed some issues related to installation of packages, namely dealing with the setup-options attribute and resolver handling
- Added _build/build.local.xml to prepare an svn development copy for execution; builds core transport, minifies and concats the javascript and puts it in place, etc.
- Slight fix to login box and css styles to get checkbox checked css to render properly
- Updated xPDO to revision 281 to get fix to xPDOObject::save() when updating fields with NULL values.
- Styling updates; make form fields bigger, tabs bigger, menus bigger...basically pretty up the UI
- Fix to typo in createTable in modInstallVersion
- Implemented version-specific upgrades to setup/ 
- Updated xPDO to revision 275 (xPDOObject datetime/timestamp handling improvements, xPDOTransport pre-existing object restoration features, and more). 
- Changed System Events action to Error Log Viewer, which now allows you to view (and clear) the error log from the manager
- [#MODX-509] Fixed issue with refreshing of incorrect node in dragdrops on trees
- Fixes to CSS in setup, moved error box to fixed bottom right, i18n'ed more stuff, cleaned up HTML and simplified outputs
- Fixed issue where the path for processors could not be overridden by changing the parameters for handleRequest in modConnectorRequest to an array of options
- [#MODX-501] Fixed issue where trees didn't refresh when package was installed. All trees now refresh.
- Fixed bug with duplicating resources
- [#MODX-505] Fixed issue with creating weblink redirecting improperly 
- Fixed issue with emptying recycle bin and root-level resources
- [#MODX-508] Weblinks are now not hidden by default
- Fix missing published checkboxes in resource derivative classes 
- Applied patch to fix issue with label click of checkboxes not changing value 
- [#MODX-507] Fixed bug where Published checkbox wasnt showing in resource panel
- Fixed bug in filetree that would scroll up topmenu
- [#MODX-507] Adding in textbox for parent ID for now, will come up with better solution later
- [#MODX-506] Fixed bug where cache wasn't cleared on drag/drop in tree
- Fixed bug in modPackageBuilder that was preventing deletion of existing package directories and files.
- Added constants MODX_INSTALL_MODE_NEW, MODX_INSTALL_MODE_UPGRADE_EVO, MODX_INSTALL_MODE_UPGRADE_REVO 
- Extracted install->test() to a separate class, then i18n'ed the test strings
- LOTS of phpdoc additions to all processors, including parameter lists for each processor
- Removed any last trace of modules from Revolution
- Added phpdoc information to processors
- Properly clear cache on install/uninstall/remove of packages
- Removed "require_once MODX_PROCESSORS_PATH.'index.php';" from all processors 
- Only show 'Update Package' if the package comes from a provider
- Fixes to get browser working with TinyMCE
- Fixed issue with forced removing of packages not properly removing the resolvers
- Standardized modRequest/modResponse methods across all derivatives (i.e. modRequest::handleRequest() always calls modRequest::prepareResponse(), which calls modResponse::outputContent()). 
- [#MODX-478] Fixed typo in lexicon import/export that prevented window hiding
- Fixed issues with Symlinks
- Fix to TV output/input renders when loading in a context other than web/mgr
- Fix to invokeEvent to prevent unwanted caching of event name if plugin executes more than one event per runtime
- [#MODX-424] Added readme viewing to package grid
- Added ability to delete multiple element properties at once via a multiple row handler
- [#MODX-488] Removing double click from properties grid for 'name' field to prevent unwanted breaking
- Added back in setDirectory to modConnectorRequest
- [#MODX-292] Properly format system settings editedon value
- [#MODX-293] Properly format editedon for lexicon entries
- [#MODX-481] Fixed rendering issues in element property grid columns
- [#MODX-479] Fixed issue where first snippet property edited didn't show value
- [#MODX-480] Fixed issue with lexicon entry update/create not loading proper topic 
- [#MODX-474] Removing package builder menu item from build script
- [#MODX-456] Fixed issues with element property grids
- Fixed MODx.grid.LocalGrid store bugs when dealing with grouped data
- added pageSize and pageStart config items to MODx.grid.Grid
- Fix to MODx.grid.Grid in case listeners are provided, dont ignore context menu
- [#MODX-466] Fixes to dropdowns for element categories, field issues
- [#MODX-115] Some fixes to rendering issues with comboboxes/datefields on Safari
- Updated xPDO to rev 265 for improvements in xPDOValidator allowing multiple rules to be evaluated per column.
- Refactored modError completely, removing all derivative classes and introducing modManagerResponse and modConnectorResponse to handle formatting modError responses appropriately.
- Added modRequest::registerLogging() and relocated logic for detecting and taking action on register logging parameters out of loadErrorHandler().
- Refactored modArrayError to remove Smarty dependencies, moving them to a new derivative, modSmartyError which the manager UI can utilize explicitly.
- Added element property panel to all Element panels for managing default properties (except Modules).
- Added modElement->setPlaceholders() to set placeholders and return any global placeholders that might need to be restored after an element is processed.
- modChunk and modTemplateVar now restore any placeholders from the global scope after processing any local properties with the same name.
- Added properties as local placeholders when processing modTemplateVar instances to match behavior of modChunk/modTemplate.
- Updates to snippet property editor.
- Added properties to modTemplateVar to make them consistent with all other elements.
- Modify modX::getChunk() and runSnippet() to process those elements as non-cacheable instances. 
- Added modResource::getContent() and setContent() functions for extensible control of accessing raw source content.
- Modify modElement::setProperties() and modTag::setProperties() to handle various property data formats.
- Updated modParser::parsePropertyString() to handle local property xtypes from UI and convert legacy types.
- Added isCacheable() and setCacheable() to modElement and modTag classes for direct, extensible control of caching.
- Modified behavior of modTemplate/modChunk not to prefix properties turned into placeholders with the name of the element.
- Added getContent(), setContent(), getProperties(), and setProperties() to modTag and derivatives.
- Added modParser::parsePropertyString() to parse element properties from string or array representations.
- Updated modElement::process() behavior to check cache sooner and avoid unnecessary source content access and other processing.
- Additional foreign key and sorting indexes added to modElement classes.
- Added properties to all modElement classes except modTemplateVar.
- Added setProperties() to modElement for setting a set of default properties that will be used by the element.
- Added getProperties() to modElement for getting the properties to be used when processing the element.
- Added getContent() and setContent() function to modElement and provided overrides in the appropriate subclasses.
- Removed modTransportPackage::loadTransport(); the manifest should always be loaded from the file.
- Updated xPDO to rev 262 for improvements in the xPDOTransport manifest format.
- Updated xPDO to rev 258 for bug fix in new xPDOObject::_setRaw() function with array and json phptype fields.
- Updated xPDO to rev 256 for bug fix in xPDO::getSelectColumns() and new xPDOObject::_setRaw() implementation to resolve issues with native php types when using fromArray().
- Added modPackageBuilder->setPackageAttributes() function for easily adding transport-level attributes to a package.
- Updated xPDO to rev 252 to get new features allowing transport packages to carry transport attributes.
- Added numerous foreign key and sorting indexes to site_content table (modResource) to improve performance of common queries.
- Changed modX::changePassword() implementation to call modUser::changePassword().
- Added getResourceGroups() and getUserGroups() to modUser class to retrieve those things and cache in session.
- Renamed and moved modX::_checkPublishStatus() to modRequest::checkPublishStatus() and renabled this functionality.
- Deprecated and moved modX::checkPreview() implementation to modResponse.
- Added view_offline attribute to default Context access policy.
- Removed deprecated and invalid modX::makeFriendlyURL().
- Removed deprecated modX::webAlert() function.
- [#MODX-364] Results of regClient*() functions are now cached into the Resource cache files to solve error on cached pages with cached snippets.
- Removed deprecated modX::mergeDocumentMETATags() and moved feature to modResource::mergeMetatags() and modResource::mergeKeywords().
- Removed deprecated modX::makeList() function.

MODx Revolution 2.0.0-alpha-5 (LastChangedRevision: 4273 , LastChangedDate: 2008-10-09 12:42:42 -0500 (Thu, 09 Oct 2008))
====================================
- [#MODX-88] Move version checking to setup script and add notifications.
- [#MODX-66] Change the way properties work within the scope of a chunk; placeholders set by the chunks properties are now removed after the chunk is processed.
- Added modX::unsetPlaceholder() and modX::unsetPlaceholders() functions.
- [#MODX-329] Fixed error with browser "remembering" user even when "remember me" is not checked.  Was always using the system setting regardless of rememberme.
- [#MODX-380] Created modSymLink resource class which forwards requests to other resources without changing the URL (as opposed to modWebLink which redirects).

MODx Revolution 2.0.0-alpha-4 (LastChangedRevision: 4213 ,LastChangedDate: 2008-10-01 12:18:41 -0500 (Wed, 01 Oct 2008))
====================================
- Updated xPDO to rev 248
- More log messages for modPackageBuilder
- Fixed some bugs with MODx.Browser
- Enabled specific path setting for MODx.Browser
- Fix to remove redirect to system settings if version info differs.
- Added MODX_SETUP_KEY to setup to identify the distribution type and allow setup logic to be conditional based on this information.
- Introduced additional default policy attributes and policy checks throughout the controllers and processors for more robust access control.
- [#MODX-349] Added processor and menu item to reload your own access policies without logging out and logging back in.
- [#MODX-349] Added processor and menu item to flush all user sessions from the database.
- [#MODX-349] Modified user policies to cache policies by Context; previously policies cached for one context were being applied to other contexts when switching or accessing both from the same browser session.
- Updated xPDO to revision 246 to fix problem with modLexiconEntry rows being duplicated in upgrades after deleting modLexiconFocus records.
- Modified Ant build to automatically compress and concatenate js files (SVN users cannot use compress_js option without performing the complete-wc task in build.xml).
- Updating xPDO to revision 234.
- Added support for logging to registers through any modError instance when loaded by modRequest::loadErrorHandler().
- Removed modRegisterHandler and added logging helper functions to modRegistry. 
- Updating xPDO to revision 233.
- Updated modAccessibleObject::loadCollection() based on xPDO::loadCollection() changes.
- Updating xPDO to revision 231.
- Various model updates to reduce memory usage [convert foreach with fetchAll() calls to while with fetch()].
- [#MODX-137] Locked Elements now editable by users with the Admin policy attribute edit_locked (not locked as in being edited by another user, but locked explicitly in the Element attributes).
- Moved makeUrl logic to modContext class and modX now determines which context to use when building the URL.
- Introduced modX->getContext() to retrieve, prepare and store context configurations in modX->contexts array for reuse during the single request
- Added _config, _systemConfig and _userConfig to hold on to various parts of the configuration settings before they are merged for use, allowing other functions to remerge the settings as needed.
- Fixed modX->switchContext() to clear all contextual/user setting overrides and reload the bootstrap _config, _systemConfig, and make use of the modX->contexts array.
- Implemented UI ability to choose vehicle-specific attributes when adding vehicles to packages
- Added dynamic value replacement of {setting_key} in user settings in modX->getUser().
- Added function to grab the request parameters to MODx.request
- Added missing permission check on empty_cache attribute on refresh_site controller/processor.
- Updated xPDO to revision 218.
- [#MODX-282] Fixed bug where grid would show non-existent page in lexicon/settings grids
- Removed permission check on logout action; doesn't make much sense.
- Proper formatting of editedon time in system settings grid
- Added System Settings "Update Setting" window for more detailed editin
- Rebuilt core data files for the transport.core.php script and made correction to core namespace path to the value {core_path} which is calculated at run-time.
- [#MODX-263] Access policy update grid moved to separate page
- Created panel for editing access policies
- [#MODX-277] Changed 'setting' to 'name' at top of System Settings grid
- [#MODX-283] Fixed combo-boolean combobox to prevent overwriting of form variables. this was a bizarre bug.
- Allowed modPackageBuilder to now use dynamic, on-the-fly namespaces. Separated out registerNamespace() from create()
- Added support for loading extension_packages via configuration settings before the session is initialized.
- Fixed dynamic value replacement of {setting_key} in system and context setting generators.
- Updated xPDO to revision 216.
- Added class_key field to modUser class/table to support modUser derivatives.
- Fix to new modLexiconEntry table structure (was not installing due to NOT NULL and no default value).
- Removed modResource::hasAccess() function to make sure and avoid confusion with security.
- Add default admin user to the Administrator modUserGroup with a modUserGroupRole of 2 (SuperUser) on new installs and upgrades.

MODx Revolution 2.0.0-alpha-3 (LastChangedRevision: 3867, LastChangedDate: 2008-07-22 08:44:38 -0500 (Tue, 22 Jul 2008))
====================================
- [#MODX-210] Changed no-longer-valid help text for resource panel
- [#MODX-216] Fixed bug with pub_date/unpub_date for the Resource panel
- [#MODX-213] manually entered passwords not being displayed after saving
- Added editability to packages grid
- [#MODX-205] Fixed category saving
- [#MODX-196] Fixed snippet category error in IE7
- Created modInstallError for base processing methods
- Added object support to modInstallJsonError
- [#MODX-201] Fixed bug with Category combo that prevented adding in a custom category
- [#MODX-200] Added colored Not Installed text to not installed packages
- [#MODX-70] Removed top buttons, as they are unnecessary and cause more problems than they are worth.
- [#MODX-174] Language setting in setup is not loaded.
- Note: renamed the language file to en.php to match the adopted IANA standard codes (see #MODX-187)
- [#MODX-26] Manager User creation problems
- Corrections to new user account email
- Added MODX_URL_SCHEME define and url_scheme configuration setting
- Added MODX_HTTP_HOST define and http_host configuration setting
- Changed "Modules" top menu to "Components" top menu. Component developers are encouraged to put their 3rd party menus in there.
- [#MODX-83] Radio Options not working in TV
- [#MODX-103] Fixed blank template change warning message.
- [#MODX-173] Language setting in manager pages is not loaded.
- Removed ucwords on getlist processor for lexicons.
- Fixed feed_modx_security/news keys in the build file.
- [#MODX-184] Fixed show in menu checkbox, should have been labeled "Hide Menu" since the opposite is true in the database. Changed to match DB column properties.
- [#MODX-190] Fixed bug with missing duplicate snippet error message
- Added check for existing name in snippet duplicate processor
- Updated build.src.url to branches/revolution
- Fixed import html/resources
- Fixed action pointer if version is incorrect

MODx Revolution 2.0.0-alpha-2 (LastChangedRevision: 3841, LastChangedDate: 2008-07-15 09:18:24 -0500 (Tue, 15 Jul 2008))
====================================
- Adopting new product name, MODx Revolution, and changed version to 2.0.0
- Fixed bug with content type grid
- Replaced 'gender' with Role column in Users grid
- [#MODX-182] Fixed invalid reference in tv/create.js
- Fixed TV input type dropdown, added proper processor/connector
- changed xPDOCriteria calls to more abstract newQuery ability
- Added attachment capabilities to modMail/modPHPMailer classes
- Added setHTML method to modPHPMailer
- Updated documentation for modValidator class
- Added explicit header call to set text/json; charset=UTF-8 on responses from modJSONError
- Remote package installation now works.
- Fixed invalid schema relationships with transport providers/packages
- Included check for xPDO transport service config to prevent warning
- [#MODX-108] Added more database info to the site info page - contrib by sottwell
- Finished UI for modStaticResource
- Added some inline documentation to widgets for help
- Set a more appropriate default resolver target
- Removed unnecessary package parameter from modPackageBuilder::buildSchema
- Removed unnecessary package setting
- Added buildSchema function to modPackageBuilder
- Added tooltips to elements and contexts in the resource/element trees
- Fixed bug in Module update page
- Added a qtip to document tree nodes so they display resource longtitle/description in a tooltip
- Moved styles to gray theme to prepare for css work
- Weblinks now functional
- Fixed slight bug with FF3 and panel collapsibility
- Fixed plugin properties
- [#MODX-162] Fixes problem where vehicle grid is not refreshed on 2nd build, as well as resets the form
- Added 'success' event to MODx.FormPanel
- [#MODX-172] Fix to option values for setup in IE 6. Fix by kmd.
- [#MODX-166] - Fixed config cache issue - fix provided by kmd
- [#MODX-165] could not save Template element - fix provided by SA
- Fixed and cleaned up the actions/menus JS and combos
- Removed unnecessary tertiary expression (check is already handled by the function)
- [#MODX-131] Fixed Apache crash and enabled Tools -> Action
- Added fix to _() JS function to allow for parameter passing: 
    String: 'Testing: [[+hello]]';
    JS call: _('testkey',{'hello': 'Success!'});
    Result: 'Testing: Success!';
- [#MODX-148] Added support for [[+placeholder]] tags in lexicon strings. i.e., with a lexicon string with key 'test' and value: 'Test me: [[+hello]]'
    Programmatically:
    $modx->lexicon('test',array('hello' => 'Success!');
    
    Tag:
    [[%test?hello=`Success!`]]
- Fixed to typo on system info JS
- Added namespacing ability to the addDirectory() and load() methods of modLexicon. Used like so:
    $modx->lexicon->addDirectory('pathhere/','testNS');
    $modx->lexicon->load('testNS:fociname');
- [#MODX-102] fixed missing lexicon entries in php4
- Added OnHandleRequest event, invoked before anything occurs in modRequest::handleRequest().
- Set the modLexicon::_lexicon to an empty array even if nothing was loaded.
- Added modX::switchContext(string $contextKey) function to make it easy to switch contexts using a plugin and the new OnHandleRequest event.
- Fix to properly submit the content field for resources (should also handle multiple RTEs now)
- Fixed typo in lexicon reference in event getlist
- Fix to MODx.load to return multiple objects if they exist
- General JS doc updates
- Added MODx JS class, which allows for xtype loading via MODx.load()
- Some JS doc updates
- Fixed modErrorHandler to ignore suppressed errors like a proper error handler is expected to.
- [#MODX-109] Fix bug with profile page loading of date.
- Reconfigured context update window to separate into tabs for easier viewing and rendering
- Changed TV resource group panel to a grid, instated proper remove/update code
- [#MODX-126] Implemented 2 new modSystemSettings: feed_modx_news and feed_modx_security for dynamic setting of the RSS feeds in the welcome pane of the manager
- [#MODX-137] Removed locked check until a resolution is made on locked elements.
- [#MODX-119] Corrected issue with file editor stripping out SCRIPT tags.  Was using $_REQUEST instead of $_POST so the values were sanitized by the request handler.
- Updated Template management to a MODx.FormPanel
- Altered the way modLexicon loads multiple foci for PHP4 compatibility
- Added modLexicon::addDirectory, which adds a directory when loading lexicon foci
- Properly load TV widgets and i18n their strings
- Fixed bug with modLexicon and $modx reference
- [#MODX-133] Prevent elements from being dragged into different types
- [#MODX-125] Fixed saving pub/unpub date on resources
- [#MODX-106] Removed assets/images check.
- Configured Object field in Package Builder to be a combobox that loads a dropdown of the selected class_key
- Added ability to remove vehicles from not yet built package
- Added MODx.grid.LocalGrid as abstract class of local-data-based grids
- Added MODx.panel.Wizard as abstract class of wizard panels
- [#MODX-121] Fixed top menu loading incorrectly when clicking on icons
- Fixed TV management page, specifically with TV->Template access
- [#MODX-118] Fixed bug with creating/removing/updating directories from Directory tree
- Added MODx.combo.ContentDisposition
- Added ability for MODx.toolbar.Actionbuttons to support formpanel as an alternative for form config parameter
- Added $modx->config properties to MODx.config JS array sent
- Fixed update resource TV loading
- [#MODX-113] Fixed bug in Safari with scrolling in grids, apparently Safari doesn't like Ext's autoHeight
- Removed legacy tpl's in settings/ dir
- [#MODX-107] Fixed tree refreshes when resource is saved, both in create and update. Update will now refresh only the parent node of the resource being saved, which speeds up save time
- Fixed issues with TV Panel loading improperly on new resource
- [#MODX-114] Prevented JS error from occurring when using page settings checkboxes
- [#MODX-116] Fixed text for removing a category
- Fixed Resource pages to allow for Resource Groups to be assigned access prior to Resource creation, as well as making grid not save until 'Save' is clicked
- Fixed Template pages to allow for TVs to be assigned access prior to Template creation, as well as making grid not save until 'Save' is clicked
- Fixed TV pages to allow for templates to be assigned access prior to TV creation, as well as making grid not save until 'Save' is clicked
- Fixed module update, removing legacy code
- Fixed plugin event grid: now can be used via create or update, also properly handles events, does not save until "Save" button is clicked on action bar

MODx 0.9.7-alpha-1 (LastChangedRevision: 3664, LastChangedDate: 2008-04-28 12:43:15 -0500 (Mon, 28 Apr 2008))
====================================
- Updated ExtJS from version 2.0 to 2.0.1
- [Trac#20] When creating new document, make the 'Log Visits' checkbox respect the main configuration setting.
- [Trac#9] Converted Database Tables tab in System Information to use Ext Grid.
- [Trac#40] Default role settings are now set correctly when saving roles to the database.
- [Trac#4] Converted Modules section to use Ext interface.
- Added new resource import routine for creating resources from static content on the file system, as any valid modResource derivative.
- Introducing context support to the manager resource trees.
- [Trac#32] Display correct message counts for the Inbox section on the Welcome page.
- [Trac#31] System Configuration page always showing 'New Install' message. Refactored code to use $modx->version.
- [Trac#25] Several bugfixes and refactorings to make the Messages section function correctly.
- [Trac#6] Remove Locks not working from the top menubar.
- Removed custom_contenttype from system_settings and manager interface.
- Converted and refactored Import HTML tool for the new APIs.
- [Trac#29] Resource checkboxes on settings tab not showing accurate values when editing.
- [Trac#28] Cache not cleared when resources are saved and the clear cache checkbox is checked.
- [Trac#27] Cached modResources were not loading or rendering since getResource() moved to modRequest from modX.  Cache files generated with new reference to the modX object ($this->modx vs $this).
- Remove logic in modResource::addOne() that was disallowing binary content types.
- Add conditional to check for $GLOBALS['https_port'] before attempting to use it.
- Several fixes to modResource processors involving saving of boolean fields via checkboxes; make sure POST is filled with unchecked fields having a value of zero.
- Upgrades now work for previous 0.9.7 installations
- Add-on installation has been removed from setup in preparation for adding it to the manager itself.
- Removed modManager095 and all related legacy support for ManagerAPI extender, moving this functionality to modManagerRequest.
- Added/updated delegate controllers, templates, and processors for modWebLink and modStaticResource.
- Added new static resource option to document tree context menus. 
- Fixed bug with chunk update processor deleting the chunk content.
- [Trac#19] Bugs with password on user creation/update; was saving plain password (not encoded).
- Introduction of new setup using transport packages (new installs only for now).
- Modified modRequest::sanitize() to no longer strip old-style tags.
- Moved MODx classes and maps out of core/xpdo/om/modx095 and into core/model/modx.
- [xPDO] Add support for package specific include paths for models.
- Refactored INCLUDE_ORDERING_ERROR to manager/includes/accesscheck.inc.php
- Begin adding input and output filtering to all MODx elements and tags (modElement and modTag derivatives), including default filter implementations based on phX (not yet working).
- Begin refactoring modx095 package to utilize xPDOQuery (modResource::getOne()).
- [xPDO] Fixed error in xPDOObject::remove() that was trying to call the toCache function on xPDOObject rather than xPDO.
- Added checkForLocks func to modx.class.php
- Added checkIfIn to modmanager095.class.php, to do the annoying check if in manager in all the pages
- Added splitter class for tables to get the line effect found in user management
- Added ul.no_list to get list effect without bullets
- Added formhandler.js - handles validation in forms by sending form through AJAX call. If response != true, then outputs response to a div with id 'errormsg'. Also evaluates JS scripts in the response.
- Updated MODx model for modUserSettings and modWebUserSettings with appropriate primary key indexes and field types.
- Updated installer SQL to remove the previous indexes and add the primary key index.
- Fix to modX :: insideManager() to make sure there is a context object initialized before trying to get the context key.
- [xPDO] Introduction of xPDOQuery for building SQL queries using only objects and the API.
- [xPDO] Fix to timestamp phptype handling when stored as integer dbtype in database.
- Modified modResource constructor to set createdon and createdby fields appropriately.
- Fix for mcpuk GetUploadProgress script (see http://modxcms.com/forums/index.php/topic,11712.msg79581.html#msg79581)
- Separated styles into their function, for easier manipulation and management
- Ongoing Conversion of manager pages to xPDO, cleaning up XHTML
- Emulated PDO can now be forced in PHP 5.1+ when PDO class is already available, but the required drivers are not available.
- Added $modx->getTree() function for easily getting a tree structure of MODx resource ids in the current context.
- Modified $modx->resourceMap to a simpler structure and optimized getParentIds() and getChildIds() functions.  $modx->documentMap still holds the old structure but is deprecated.
- Refactored entire caching layer, based on changes to xPDO.  Files are now spread amongst logical directories, and automatic temp directory detection was also added.
- Translated all core files and data in the core distribution/installation to the new native tag format.
- Optimized modParser, removing run-time translation with modParser095 from normal execution and added modTranslate095 utility class, which can translate tags in database and file content, writing a log of the translation and/or making the changes to the database and files.  modParser095 is experimental, and not recommended, as there are too many issues with mixed tags being parsed incorrectly.
- Fix to make sure modX::parseChunk removes replacement placeholders for empty values.
- Updates to MakeForm class.
- Added modXMLRPCResource, modXMLRPCResponse classes and supporting code, including modified XML-RPC for PHP code (from version 2.1).  You can now create resources that represent XMLRPC servers and clients.
- Altered session cookie expiration that was getting set automatically on all sessions based on the default session cookie lifetime.  Lifetime is now only applied if a session value is set for each context.
- Added check to verify keys passed to modX::getPlaceholder() are valid strings to avoid PHP errors.
- Various additional changes to prevent errors from revealing critical database credentials and connection information.
- Fixed bug with system settings getting overwritten on mutate_settings manager page.
- Merged from trunk (0.9.5.1-RC1) at revision 2251.
- Latest updates and bug fixes from xPDO project.
- Add ability to locate and use original manager/config/config.inc.php to upgrade directly on legacy installations.
- Applied fixes to modResponse::outputContent(); was not assigning regClient script replacements to the output.
- Changed parseChunk to parse new style tags to avoid any accidental matches on mixed tag situations.
- Changed modChunk and modTemplate logic to create placeholders from any properties of the elements prefixed by the name of the element + '.' (added the .).
- Fixed alias path generation, was reversing the order of parent paths in the resourceListing.
- Fixed problems with recent changes to modRequest::sanitizeRequest() which was again truncating $_POST vars in the manager when encountering MODx tags.
- Fixed generation of context cache files; was generating an eventMap for the mgr context at all times.
- Fix to logic in modDocument::getMany('modTemplateVar').
- Merge with 0.9.5.1 trunk at revision 2205.
- Parsing adjustments to better deal with mixed old and new style tags.
- [xPDO] Significant xPDO core update to prepare for SQLite, PostgreSQL and other ports.
- Fix bug in install/upgrade SQL when resetting user and system settings for manager_theme.
- Added some new configuration options for session handling and various caching features; more to come.
- Minor changes to reduce number of unique db connections used during a request.
- Various PHP 4 warnings fixed when assigning values by reference directly from functions (only variables can be assigned by reference in PHP 4).
- Various improvements to MakeTable class based on usage in user_management and other manager interfaces.
- Begin replacing Datagrid usage in manager with MakeTable (user_management, web_user_management, manage_modules, docmanager module); lots more Datagrids to replace.
- Various changes to DataGrid and DatasetPager to try and support existing usage.
- Fix for @EVAL bindings with more than one line of code.
- Adjustments to modParser::collectElementTags() to better handle invalid tags (i.e. mispelled snippet names) with nested tags.
- Adjustments to modParser095::translate() to properly handle translation from old to new configuration tags [(email_sender)] to [[++email_sender]].
- DBAPI::escape() adjustment (again) to avoid certain issues when using native PDO along-side legacy manager code calling the mysql extension.
- Removed & from getMany call in modCacheManager to prevent PHP warnings in PHP 4.
- [xPDO] Added additional logic to xPDO::loadClass() which will return an error immediately if no class name is provided.
- Adjusted modDocument::getMany() signature; added $cacheFlag= false parameter.
- Remerged mutate_content.dynamic.php to fix several problems saving documents.
- Adjusted queries in refresh_site.dynamic.php.
- Added session table to install script due to failure of auto-table creation on some environments.
- Removed unnecessary if statement around session_set_save_handler() in modX::_initSession(); the actual problem was auto-table creation was failing.
- Fix DBAPI::escape() function; PDO::quote() adds single-quotes unlike the legacy mysql escape functions and this was causing content truncation.
- [xPDO] xPDOCacheHandler class updated to allow configuration properties to determine a class for handling xPDO object and result set caching.
- modX::_initSession() updated to better handle situations where session_set_save_handler() fails when trying to override default PHP session handling.
- [xPDO] Modified fromArray() so it is not responsible for determining the _new attribute of xPDOObject instances.  This is the responsibility of xPDO::getObject(), which uses xPDO::load(), and xPDO::getCollection().
- Fix datasetpager error with PDO changes so DocManager module can load.
- Fix WebUser login -- weblogin.processor.inc.php.
- Fix makeUrl() -- no longer needs to add base_url.
- Fix upgrade install script to insert new config settings properly.
- Few tweaks to modX::_initSession function (was setting session_name twice).
- Changed all line-endings to unix-style \n on all files.
- Removed assets/cache/* which is replaced by core/cache/*.
- Updated version data format to be compatible with PHP's version_compare() function.
- Resolved problems setting primary keys values and improperly identifying new objects when using xPDOObject::fromArray().
- Several adjustments to xPDO::load(), xPDO::getCollection() and several xPDOObject methods based on changes to xPDOObject::fromArray().
- Added stripslashes() to modRequest::_sanitize() when working with magic_quotes_gpc enabled.
- Fix to MakeTable::prepareOrderByLink() to handle FURLs properly.
- Reduce exposure of critical database credentials in xPDO::load() when errors are reported/logged.
- Fixed error in xPDOObject::save(); updates to objects with compound primary keys were failing.
- Added proper escapes to deprecated modX::getFullTableName() to fix issues when dashes (-) or other reserved (My)SQL characters appear in a database name.
- Merged with trunk (0.9.5 final) at revision 2106.
- Removed session_keepalive code.
- Merged with trunk (0.9.5) at revision 2066.
- Merged with trunk (0.9.5) at revision 2063.
- Schema updates based on column size changes in 0.9.5.
- Added missing modX::getSettings() method.
- Various bug fixes.
- Merged with trunk (0.9.5) at revision 1945.
- [bug fix] Fixed a modParser bug when CDATA wrappers were encountered.
- Add missing webAlert function to new modX class.
- Modify categories save process to get the insert id using $modx->lastInsertId().
- Fix to setup.sql; changed ENGINE= to TYPE= when creating new context table to avoid problems with MySQL versions before 4.1.
- Fixed invalid reference to mergeDocumentMETATags in modResponse class.
- [New feature] Allow custom error handler classes.
- [New feature] Fine-grained configuration options for caching pages, database results, or disabling the cache altogether (see system settings starting with `cache.`).  Turn the different caching options on/off or set a default time-to-live for those items being cached.
- [New feature] Database result-set and xPDO object caching, with support for memcache, native-JSON object caching for high-performance AJAX requests.
- [New feature] Configurable session management with default implementation configured for modSessionHandler, an xPDO-based implementation that stores sessions in a database, and allows a great deal of configurability, by site and/or context.
- [New feature] Contexts allows a site to be organized into sub-sites, subdomains, etc, and override any system settings by context.  The default contexts are 'web' and 'mgr' to support the legacy ideas of front-end and back-end session contexts.
- Introducing the new MODx core built on top of xPDO; this will incrementally replace the entire existing codebase, but can co-exist until 1.0 release and provides about 90 to 95% legacy compatibility for existing tags and add-ons.
