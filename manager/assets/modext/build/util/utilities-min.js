Ext.namespace("MODx.util.Progress");MODx.util.LoadingBox=function(A){A=A||{};Ext.Ajax.on("beforerequest",this.show,this);Ext.Ajax.on("requestcomplete",this.hide,this);Ext.Ajax.on("requestexception",this.hide,this)};Ext.override(MODx.util.LoadingBox,{enabled:true,hide:function(){if(this.enabled){Ext.Msg.hide()}},show:function(){if(this.enabled){Ext.Msg.show({title:_("please_wait"),msg:_("loading"),width:240,progress:true,closable:false})}},disable:function(){this.enabled=false},enable:function(){this.enabled=true}});Ext.reg("modx-loading-box",MODx.util.LoadingBox);MODx.util.JSONReader=function(A){A=A||{};Ext.applyIf(A,{successProperty:"success",totalProperty:"total",root:"data"});MODx.util.JSONReader=new Ext.data.JsonReader(A,["id","msg"])};Ext.reg("modx-json-reader",MODx.util.JSONReader);MODx.util.Progress={id:0,time:function(A,C,B){B=B||_("saving");if(MODx.util.Progress.id==C&&A<11){Ext.MessageBox.updateProgress(A/10,B)}},reset:function(){MODx.util.Progress.id=MODx.util.Progress.id+1}};MODx.StaticTextField=Ext.extend(Ext.form.TextField,{fieldClass:"x-static-text-field",onRender:function(){this.readOnly=true;this.disabled=!this.initialConfig.submitValue;MODx.StaticTextField.superclass.onRender.apply(this,arguments)}});Ext.reg("statictextfield",MODx.StaticTextField);MODx.StaticBoolean=Ext.extend(Ext.form.TextField,{fieldClass:"x-static-text-field",onRender:function(A){this.readOnly=true;this.disabled=!this.initialConfig.submitValue;MODx.StaticBoolean.superclass.onRender.apply(this,arguments);this.on("change",this.onChange,this)},setValue:function(A){if(A==1){this.addClass("green");A=_("yes")}else{this.addClass("red");A=_("no")}MODx.StaticBoolean.superclass.setValue.apply(this,arguments)}});Ext.reg("staticboolean",MODx.StaticBoolean);function $(B){if(!B){return null}var A=Ext.type(B);if(A=="string"){B=document.getElementById(B);A=(B)?"element":false}if(A!="element"){return null}return B}Array.prototype.in_array=function(A){for(var C=0,B=this.length;C<B;C++){if(this[C]==A){return true}}return false};Ext.form.setCheckboxValues=function(B,E,A){var C,D=0;while((C=B.findField(E+D))!=null){C.setValue((A&(1<<D))?"true":"false");D++}};Ext.form.getCheckboxMask=function(D){var B="";if(typeof (D)!="undefined"){if((typeof (D)=="string")){B=D+""}else{for(var C=0,A=D.length;C<A;C++){B+=(B!=""?",":"")+(D[C]-0)}}}return B};Ext.form.BasicForm.prototype.append=function(){var C=new Ext.form.Layout();var A=[];C.stack.push.apply(C.stack,arguments);for(var B=0;B<arguments.length;B++){if(arguments[B].isFormField){A.push(arguments[B])}}C.render(this.el);if(A.length>0){this.items.addAll(A);for(var B=0;B<A.length;B++){A[B].render("x-form-el-"+A[B].id)}}return this};Ext.form.AMPMField=function(B,A){return new Ext.form.ComboBox({store:new Ext.data.SimpleStore({fields:["ampm"],data:[["am"],["pm"]]}),displayField:"ampm",hiddenName:B,mode:"local",editable:false,forceSelection:true,triggerAction:"all",width:60,value:A||"am"})};Ext.form.HourField=function(C,B,A){return new Ext.form.ComboBox({store:new Ext.data.SimpleStore({fields:["hour"],data:[[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12]]}),displayField:"hour",mode:"local",triggerAction:"all",width:60,forceSelection:true,rowHeight:false,editable:false,value:A||1,transform:C})};Ext.override(Ext.tree.TreeNodeUI,{hasClass:function(B){var A=Ext.fly(this.elNode);return B&&(" "+A.dom.className+" ").indexOf(" "+B+" ")!=-1}});Ext.override(Ext.form.Action.Submit,{handleResponse:function(D){var B=Ext.decode(D.responseText);if(this.form.errorReader){var C=this.form.errorReader.read(D);var G=[];if(C.records){for(var E=0,A=C.records.length;E<A;E++){var F=C.records[E];G[E]=F.data}}if(G.length<1){G=null}return{success:C.success,message:B.message,object:B.object,errors:G}}return Ext.decode(D.responseText)}});Ext.form.ColorField=function(A){Ext.form.ColorField.superclass.constructor.call(this,A);this.on("render",this.handleRender)};Ext.extend(Ext.form.ColorField,Ext.form.TriggerField,{showHexValue:true,triggerClass:"x-form-color-trigger",defaultAutoCreate:{tag:"input",type:"text",size:"10",autocomplete:"off",maxlength:"6"},lengthText:"Color hex values must be either 3 or 6 characters.",blankText:"Must have a hexidecimal value in the format ABCDEF.",defaultColor:"",maskRe:/[a-f0-9]/i,regex:/[a-f0-9]/i,curColor:"",validateValue:function(A){if(!this.showHexValue){return true}if(A.length<1){this.el.setStyle({"background-color":"#"+this.defaultColor});if(!this.allowBlank){this.markInvalid(String.format(this.blankText,A));return false}return true}this.setColor(A);return true},validateBlur:function(){return !this.menu||!this.menu.isVisible()},markInvalid:function(A){Ext.form.ColorField.superclass.markInvalid.call(this,A);this.el.setStyle({"background-image":"url(../lib/resources/images/default/grid/invalid_line.gif)"})},getValue:function(){return this.curValue||this.defaultValue||"FFFFFF"},setValue:function(A){Ext.form.ColorField.superclass.setValue.call(this,A);this.setColor(A)},setColor:function(A){this.curColor=A;h=A.substr(0,1)!="#"?"#"+A:A;this.el.setStyle({"background-color":h,"background-image":"none"});if(!this.showHexValue){}},handleRender:function(){this.setDefaultColor()},setDefaultColor:function(){this.setValue(this.defaultColor)},menuListeners:{select:function(A,B){this.setValue(B)},show:function(){this.onFocus()},hide:function(){this.focus();var A=this.menuListeners;this.menu.un("select",A.select,this);this.menu.un("show",A.show,this);this.menu.un("hide",A.hide,this)}},handleSelect:function(B,A){this.setValue(A)},onTriggerClick:function(){if(this.disabled){return }if(this.menu==null){this.menu=new Ext.menu.ColorMenu();this.menu.palette.on("select",this.handleSelect,this)}this.menu.on(Ext.apply({},this.menuListeners,{scope:this}));this.menu.show(this.el,"tl-bl?")}});Ext.form.Field.prototype.afterRender=Ext.form.Field.prototype.afterRender.createSequence(function(){if(this.description){Ext.QuickTips.register({target:this.getEl(),text:this.description,enabled:true});var A=Ext.form.Field.findLabel(this);if(A){Ext.QuickTips.register({target:A,text:this.description,enabled:true})}}});Ext.applyIf(Ext.form.Field,{findLabel:function(C){var B=null;var A=null;B=C.getEl().up("div.x-form-element");if(B){A=B.child("label")}if(A){return A}B=C.getEl().up("div.x-form-item");if(B){A=B.child("label")}if(A){return A}}});Ext.onReady(function(){MODx.util.LoadingBox=MODx.load({xtype:"modx-loading-box"});MODx.util.JSONReader=MODx.load({xtype:"modx-json-reader"});MODx.form.Handler=MODx.load({xtype:"modx-form-handler"});MODx.msg=MODx.load({xtype:"modx-msg"})});