MODx.grid.Message=function(A){A=A||{};var B=new Ext.grid.RowExpander({tpl:new Ext.Template('<span style="float: right;">',"<i>"+_("sent_by")+": {sender_name} <br />"+_("sent_on")+": {postdate}</i><br /><br />","</span>","<h3>{subject}</h3>","<p>{message}</p>")});B.on("expand",this.read,this);Ext.applyIf(A,{title:_("messages"),id:"grid-message",url:MODx.config.connectors_url+"security/message.php",fields:["id","type","subject","message","sender","recipient","private","date_sent","read","sender_name","menu"],width:800,autosave:true,paging:true,plugins:B,columns:[B,{header:_("id"),dataIndex:"id",width:60},{header:_("sender"),dataIndex:"sender",width:120,editor:{xtype:"combo-user",renderer:true},editable:false},{header:_("subject"),dataIndex:"subject",width:200},{header:_("date_sent"),dataIndex:"date_sent",width:150},{header:_("read"),dataIndex:"read",width:100,editor:{xtype:"combo-boolean",renderer:"boolean"},editable:false}],tbar:[{text:_("message_new"),scope:this,handler:{xtype:"window-message-create",blankValues:true}}]});MODx.grid.Message.superclass.constructor.call(this,A)};Ext.extend(MODx.grid.Message,MODx.grid.Grid,{read:function(E,D,A,B){var C=D.data;Ext.Ajax.request({url:this.config.url,params:{action:"read",id:C.id},scope:this,success:function(G){G=Ext.decode(G.responseText);if(G.success){var F=this.getStore().getAt(B);F.set("read",true);F.commit()}else{MODx.form.Handler.errorJSON(G)}}})},markUnread:function(A,B){var C=this.getSelectionModel().getSelected();Ext.Ajax.request({url:this.config.url,params:{action:"unread",id:C.data.id},scope:this,success:function(D){D=Ext.decode(D.responseText);if(D.success){C.set("read",false);C.commit()}else{MODx.form.Handler.errorJSON(D)}}})}});Ext.reg("grid-message",MODx.grid.Message);MODx.window.CreateMessage=function(A){A=A||{};Ext.applyIf(A,{title:_("message_create"),url:MODx.config.connectors_url+"security/message.php",action:"create",fields:[{xtype:"combo",fieldLabel:_("recipient_type"),name:"type",hiddenName:"type",store:new Ext.data.SimpleStore({fields:["type","disp"],data:[["user",_("user")],["usergroup",_("usergroup")],["role",_("role")],["all",_("all")]]}),mode:"local",triggerAction:"all",displayField:"disp",valueField:"type",editable:false,value:"user",listeners:{select:{fn:this.showRecipient,scope:this}}},{xtype:"combo-user",id:"mc-recipient-user",fieldLabel:_("user"),allowBlank:true},{xtype:"combo-usergroup",id:"mc-recipient-usergroup",fieldLabel:_("usergroup"),allowBlank:true},{xtype:"combo-role",id:"mc-recipient-role",fieldLabel:_("role"),allowBlank:true},{xtype:"hidden",id:"mc-recipient-all",name:"all",fieldLabel:_("all"),value:"all"},{xtype:"textfield",fieldLabel:_("subject"),name:"subject",maxLength:255,width:300},{xtype:"textarea",fieldLabel:_("message"),name:"message",width:300,grow:true}],listeners:{show:{fn:this.initRecipient,scope:this}}});MODx.window.CreateMessage.superclass.constructor.call(this,A)};Ext.extend(MODx.window.CreateMessage,MODx.Window,{tps:["user","usergroup","role","all"],initRecipient:function(){for(var A=1;A<this.tps.length;A++){var B=this.fp.getForm().findField("mc-recipient-"+this.tps[A]);if(B){this.hideField(B)}}},showRecipient:function(A,F,C){for(var C=0;C<this.tps.length;C++){var E=this.fp.getForm().findField("mc-recipient-"+this.tps[C]);if(E){this.hideField(E)}}var D=F.data.type;var B=this.fp.getForm().findField("mc-recipient-"+D);if(B){this.showField(B)}}});Ext.reg("window-message-create",MODx.window.CreateMessage);